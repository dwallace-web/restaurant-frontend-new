{"version":3,"sources":["helpers/environment.js","components/user/UserSignUp.tsx","components/user/UserSignIn.tsx","components/admin-only/EditRestaurantView.tsx","components/user/CreateNewComment.tsx","components/customer-view/CustomerCommentView.tsx","components/admin-only/NewRestaurantCard.tsx","components/admin-only/RestaurantDisplay.tsx","components/admin-only/CreateNewRestaurant.tsx","components/customer-view/EditCommentNew.tsx","components/customer-view/CustomerBioCommentView.tsx","components/customer-view/CustomerBioPanelNew.tsx","components/customer-view/CustomerBiography.tsx","components/admin-only/AdministratorPanel.tsx","components/customer-view/CustomerCardNew.tsx","components/customer-view/CustomerRestaurantsNew.tsx","components/customer-view/CustomersNew.tsx","components/layout/NewHome.tsx","components/layout/Navigation.tsx","components/layout/Parent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","window","location","hostname","SignUpNew","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmail","e","setState","email","target","value","handleUsername","username","handlePassword","password","handlePhoneNumber","phonenumber","register","preventDefault","input","state","restaurantowner","fetch","concat","method","headers","Headers","Content-Type","body","JSON","stringify","then","response","json","data","console","log","login","TagManager","dataLayer","event","Error","error","localStorage","setItem","token","sessionToken","admin","user","catch","alert","_this2","react_default","a","createElement","Typography","onSubmit","TextField","placeholder","type","name","required","onChange","bind","onClick","Button","react_router","to","React","Component","UserSignIn","signIn","active","EditRestaurantView","setName","setAddress","address","setPhonenumber","setCategory","category","editRestaurant","restaurant","id","Authorization","_this$props$restauran","deleteRestaurant","CreateNewComment","setTitle","title","setBody","createComment","restaurantid","comment","commentmade","label","variant","CustomerCommentView","test","map","Grid","key","className","style","marginBottom","gutterBottom","NewRestaurantCard","toggle","prevState","isOpen","admin_only_EditRestaurantView","length","customer_view_CustomerCommentView","user_CreateNewComment","RestaurantDisplay","admin_only_NewRestaurantCard","CreateNewRestaurant","createRestaurant","createdPlace","EditCommentNew","editComment","commentedit","marginTop","fullWidth","CustomerBioComment","_this$props$comment","Card","CardContent","customer_view_EditCommentNew","deleteComment","color","CustomerBioPanelNew","CustomerBioCommentView","CustomerBiography","deleteme","deletedcomment","usercomment","alignItems","spacing","align","customer_view_CustomerBioPanelNew","AdministratorPanel","restaurantdata","admin_only_CreateNewRestaurant","admin_only_RestaurantDisplay","customer_view_CustomerBiography","CustomerCardNew","item","container","xs","sm","CustomerRestaurantsNew","direction","justify","customer_view_CustomerCardNew","CustomersNew","mounted","customer_view_CustomerRestaurantsNew","margin","NewHome","tokenFinder","parse","getItem","admin_only_AdministratorPanel","customer_view_CustomersNew","Navigation","handleLogout","clear","previousState","logout","md","react_router_dom","disableElevation","Parent","Container","layout_Navigation","exact","path","component","UserSignUp","initialize","gtmId","events","signUp","failed","App","_Component","apply","arguments","inherits","createClass","layout_Parent","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"8RAAIA,EAAU,GAEd,OAAQC,OAAOC,SAASC,UACpB,IAAK,YACL,IAAK,YAGL,IAAK,qCACDH,EAAU,mDASHA,QCqKAI,cAxJb,SAAAA,EAAYC,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAC3BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAYRQ,YAAc,SAACC,GACbR,EAAKS,SAAS,CAACC,MAAOF,EAAEG,OAAOC,SAdJZ,EAkB7Ba,eAAiB,SAACL,GAChBR,EAAKS,SAAS,CAACK,SAAUN,EAAEG,OAAOC,SAnBPZ,EAuB7Be,eAAiB,SAACP,GAChBR,EAAKS,SAAS,CAACO,SAAUR,EAAEG,OAAOC,SAxBPZ,EA4B7BiB,kBAAoB,SAACT,GACnBR,EAAKS,SAAS,CAACS,YAAaV,EAAEG,OAAOC,SA7BVZ,EAiC7BmB,SAAW,SAACX,GACVA,EAAEY,iBAEF,IAAMC,EAAQ,CACZX,MAAOV,EAAKsB,MAAMZ,MAClBM,SAAUhB,EAAKsB,MAAMN,SACrBF,SAAUd,EAAKsB,MAAMR,SACrBI,YAAalB,EAAKsB,MAAMJ,YACxBK,gBAAiBvB,EAAKsB,MAAMC,iBAG9BC,MAAK,GAAAC,OAAI/B,EAAJ,gBAA2B,CAC9BgC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,qBAElBC,KAAMC,KAAKC,UAAUX,KAEpBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAEL,GADAC,QAAQC,IAAIF,IACO,IAAfA,EAAKG,MAyBP,MALAC,IAAWC,UAAU,CACnBA,UAAW,CACTC,MAAO,YAGLC,MAAMP,EAAKQ,OAvBjBC,aAAaC,QACX,QACAf,KAAKC,UAAU,CACbO,OAAO,EACPQ,MAAOX,EAAKY,aACZC,MAAOb,EAAKc,KAAK3B,mBAGrBvB,EAAKS,SAAS,CAAE8B,OAAO,IAEvBC,IAAWC,UAAU,CACnBA,UAAW,CACTC,MAAO,YAIXL,QAAQC,IAAI,UAUfa,MAAM,SAACP,GACNQ,MAAM,2CACNf,QAAQC,IAAIM,MAlFhB5C,EAAKsB,MAAQ,CACXC,iBAAiB,EACjBgB,OAAO,EACP7B,MAAO,GACPI,SAAU,GACVE,SAAU,GACVE,YAAa,IARYlB,wEAwFpB,IAAAqD,EAAAlD,KAGP,OAEEmD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAKgB,UACnBmC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,QACZC,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRC,SAAU7D,KAAKI,YAAY0D,KAAK9D,QAElCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,WACZC,KAAK,OACLC,KAAK,WAELC,UAAQ,EACRC,SAAU7D,KAAKU,eAAeoD,KAAK9D,QAErCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAEEC,YAAY,WACZC,KAAK,WACLC,KAAK,WAELC,UAAQ,EACRC,SAAU7D,KAAKY,eAAekD,KAAK9D,QAErCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,eACZC,KAAK,OACLC,KAAK,cAGLE,SAAU7D,KAAKc,kBAAkBgD,KAAK9D,QAExCmD,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,SACEK,KAAK,WACLC,KAAK,kBACLI,QAAS,SAAC1D,GAAD,OAAQ6C,EAAK5C,SAAS,CAACc,iBAAiB,OAEnD+B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,eAIqB,IAArB1D,KAAKmB,MAAMiB,MACTe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAG,OAIf,WAlJYC,IAAMC,WCqGfC,cArGX,SAAAA,EAAYzE,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IAC7BxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,KAAMJ,KAQRQ,YAAc,SAACC,GACbR,EAAKS,SAAS,CAACC,MAAOF,EAAEG,OAAOC,SAVFZ,EAc/Be,eAAiB,SAACP,GAChBR,EAAKS,SAAS,CAACO,SAAUR,EAAEG,OAAOC,SAfLZ,EAmB/ByE,OAAS,SAACjE,GACRA,EAAEY,iBAEF,IAAMC,EAAQ,CACZX,MAAOV,EAAKsB,MAAMZ,MAClBM,SAAUhB,EAAKsB,MAAMN,UAGvBQ,MAAK,GAAAC,OAAI/B,EAAJ,gBAA2B,CAC9BgC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,qBAElBC,KAAMC,KAAKC,UAAUX,KAEpBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAEL,GADAC,QAAQC,IAAIF,IACO,IAAfA,EAAKG,MAsBP,MALAC,IAAWC,UAAU,CACnBA,UAAW,CACTC,MAAO,YAGLC,MAAMP,EAAKQ,OArBjBC,aAAaC,QACX,QACAf,KAAKC,UAAU,CACbO,OAAO,EACPQ,MAAOX,EAAKY,aACZC,MAAOb,EAAKc,KAAK3B,mBAIrBvB,EAAKS,SAAS,CAAEiE,QAAQ,IACxBlC,IAAWC,UAAU,CACnBA,UAAW,CACTC,MAAO,cAYdS,MAAM,SAACP,GACNQ,MAAMR,GACNP,QAAQC,IAAIM,MA9DhB5C,EAAKsB,MAAQ,CACXoD,QAAQ,EACRhE,MAAO,GACPM,SAAU,IALiBhB,wEAqE7B,OACEsD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,uCACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAKsE,QACnBnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,QACZC,KAAK,OACLC,KAAK,QACLE,SAAU7D,KAAKI,YAAY0D,KAAK9D,QAElCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,WACZC,KAAK,WACLC,KAAK,WACLE,SAAU7D,KAAKY,eAAekD,KAAK9D,QAErCmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,eAGsB,IAAtB1D,KAAKmB,MAAMoD,OACTpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAG,OAIf,WAjGaC,IAAMC,qCCqGhBI,cArGb,SAAAA,EAAY5E,GAAqB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IAC/B3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KASR6E,QAAU,SAACpE,GACTR,EAAKS,SAAS,CAACqD,KAAMtD,EAAEG,OAAOC,SAXCZ,EAcjC6E,WAAa,SAACrE,GACZR,EAAKS,SAAS,CAACqE,QAAStE,EAAEG,OAAOC,SAfFZ,EAkBjC+E,eAAiB,SAACvE,GAChBR,EAAKS,SAAS,CAACS,YAAaV,EAAEG,OAAOC,SAnBNZ,EAqBjCgF,YAAc,SAACxE,GACbR,EAAKS,SAAS,CAACwE,SAAUzE,EAAEG,OAAOC,SAtBHZ,EAyBjCkF,eAAiB,SAAC1E,GAChBA,EAAEY,iBAGF,IAAMC,EAAQ,CACZyC,KAAM9D,EAAKsB,MAAMwC,KACjBgB,QAAS9E,EAAKsB,MAAMwD,QACpB5D,YAAalB,EAAKsB,MAAMJ,YACxB+D,SAAUjF,EAAKsB,MAAM2D,UAGvB,IAEEzD,MAAK,GAAAC,OAAI/B,EAAJ,gBAAA+B,OAA0BzB,EAAKD,MAAMoF,WAAWC,IAAM,CACzD1D,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAerF,EAAKD,MAAMgD,QAE5BjB,KAAMC,KAAKC,UAAUX,KAEpBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAELC,QAAQC,IAAIF,KAEhB,MAAOQ,GACPP,QAAQC,IAAI,QAASM,KAlDrB5C,EAAKsB,MAAQ,CACXwC,KAAM,GACNgB,QAAS,GACT5D,YAAa,GACb+D,SAAU,IANiBjF,wEAwDxB,IAAAsF,EAE8CnF,KAAKJ,MAAMoF,WAAxDC,EAFDE,EAECF,GAAItB,EAFLwB,EAEKxB,KAAMgB,EAFXQ,EAEWR,QAAS5D,EAFpBoE,EAEoBpE,YAAa+D,EAFjCK,EAEiCL,SAExC,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAK+E,gBACnB5B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAaE,EACbD,KAAK,OACLC,KAAK,OACLC,UAAQ,EACRC,SAAU7D,KAAKyE,QAAQX,KAAK9D,QAE9BmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAakB,EACbjB,KAAK,OACLC,KAAK,UACLC,UAAQ,EACRC,SAAU7D,KAAK0E,WAAWZ,KAAK9D,QAEjCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAa1C,EACb2C,KAAK,OACLC,KAAK,cACLE,SAAU7D,KAAK4E,eAAed,KAAK9D,QAErCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAaqB,EACbpB,KAAK,OACLC,KAAK,WACLC,UAAQ,EACRC,SAAU7D,KAAK6E,YAAYf,KAAK9D,QAElCmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,qBAEFP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQD,QAAS/D,KAAKJ,MAAMwF,iBAAiBtB,KAAK9D,KAAMiF,IAAxD,6BA/FyBd,IAAMC,WCgFxBiB,cAtFb,SAAAA,EAAYzF,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,IAClCxF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,KAQR0F,SAAW,SAACjF,GACVR,EAAKS,SAAS,CAACiF,MAAOlF,EAAEG,OAAOC,SAVGZ,EAapC2F,QAAU,SAACnF,GACTR,EAAKS,SAAS,CAACqB,KAAMtB,EAAEG,OAAOC,SAdIZ,EAkBpC4F,cAAgB,SAACpF,GACfA,EAAEY,iBACFiB,QAAQC,IAAI,SAEZ,IAAMjB,EAAQ,CACZqE,MAAO1F,EAAKsB,MAAMoE,MAClB5D,KAAM9B,EAAKsB,MAAMQ,KACjB+D,aAAc7F,EAAKD,MAAMoF,WAAWC,IAGtC/C,QAAQC,IAAI,oBAAkBjB,GAE9B,IAEEG,MAAK,GAAAC,OAAI/B,EAAJ,aAAwB,CAC3BgC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAerF,EAAKD,MAAMgD,QAE5BjB,KAAMC,KAAKC,UAAUX,KAEpBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAC6D,GACLzD,QAAQC,IAAI,kBAAgBwD,GAC5B9F,EAAKS,SAAS,CAAEsF,aAAa,MAEjC,MAAOnD,GACPP,QAAQC,IAAI,QAASM,KA5CvB5C,EAAKsB,MAAQ,CACXyE,aAAa,EACbL,MAAO,GACP5D,KAAM,IAL0B9B,wEAmDlC,OACEsD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBAE6B,IAA3BtD,KAAKmB,MAAMyE,YACPzC,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAKyF,eACrBtC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEyB,GAAG,iBAAiBY,MAAM,mBAAmBC,QAAQ,WACrDrC,YAAY,gBACZC,KAAK,OACLC,KAAK,QACLC,UAAQ,EACRC,SAAU7D,KAAKsF,SAASxB,KAAK9D,QAE/BmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEyB,GAAG,iBAAiBY,MAAM,kBAAkBC,QAAQ,WACpDrC,YAAY,kBACZC,KAAK,OACLC,KAAK,OACLC,UAAQ,EACRC,SAAU7D,KAAKwF,QAAQ1B,KAAK9D,QAE9BmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,aAGFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,0BAIJH,EAAAC,EAAAC,cAAA,mBAjFuBc,IAAMC,WCatB2B,cAjBb,SAAAA,EAAYnG,GAAqB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IAC/BlG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KACDuB,MAAQ,CACX6E,KAAM,IAHuBnG,wEAQ/B,OAAOG,KAAKJ,MAAM+F,QAAQM,IAAI,SAACN,GAAD,OAC5BxC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,IAAKR,EAAQV,GAAImB,UAAU,iBAAiBC,MAAO,CAAEC,aAAc,KACvEnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,aAApB,IAAmCH,EAAQJ,OAC3CpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,UAAUS,cAAY,GAAEZ,EAAQhE,gBAZ1BwC,IAAMC,WCuHzBoC,cAxGb,SAAAA,EAAY5G,GAAoB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,IAC9B3G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0G,GAAArG,KAAAH,KAAMJ,KAiCR6G,OAAS,WACP5G,EAAKS,SAAS,SAACoG,GAAD,MAAgB,CAC5BC,QAASD,EAAUC,WAjCrB9G,EAAKsB,MAAQ,CACXwF,QAAQ,EACRhB,QAAS,IALmB9F,mFASZ,IAAAqD,EAAAlD,KAIlBqB,MAAK,GAAAC,OACA/B,EADA,wBAAA+B,OAC8BtB,KAAKJ,MAAMoF,WAAWC,IACvD,CACEzD,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAelF,KAAKJ,MAAMgD,QAE5BrB,OAAQ,QAGTO,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAC6D,GAELzC,EAAK5C,SAAS,CAAEqF,QAASA,EAAQ1D,SAElCe,MAAM,SAACP,GACNP,QAAQC,IAAI,eAAaM,KAE7BP,QAAQC,IAAI,oDASL,IAAAgD,EAG0CnF,KAAKJ,MAAMoF,WAApDrB,EAHDwB,EAGCxB,KAAMgB,EAHPQ,EAGOR,QAAS5D,EAHhBoE,EAGgBpE,YAAa+D,EAH7BK,EAG6BL,SAEpC,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,iBAAiBC,MAAO,CAAEC,aAAc,KACrDnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,kBAAtB,SAA8CzC,GAC9CR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,uBAAtB,YAAsDzB,GACtDxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,mBAAtB,iBAAuDrF,GACvDoC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,iBAAtB,aAAiDtB,IAGnD3B,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEC,aAAc,KAM1BnD,EAAAC,EAAAC,cAACuD,EAAD,CACA5B,WAAYhF,KAAKJ,MAAMoF,WACvBpC,MAAO5C,KAAKJ,MAAMgD,MAClBwC,iBAAkBpF,KAAKJ,MAAMwF,oBAM/BjC,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,qBAAqBC,MAAO,CAAEC,aAAc,KAC1B,IAA9BtG,KAAKmB,MAAMwE,QAAQkB,OAClB1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,qDAGAH,EAAAC,EAAAC,cAACyD,EAAD,CACAlE,MAAO5C,KAAKJ,MAAMgD,MAClB+C,QAAS3F,KAAKmB,MAAMwE,WAQF,IAArB3F,KAAKJ,MAAMwC,MACVe,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEC,aAAc,KAK1BnD,EAAAC,EAAAC,cAAC0D,EAAD,CACEnE,MAAO5C,KAAKJ,MAAMgD,MAClBoC,WAAYhF,KAAKJ,MAAMoF,cAGzB,MAEN7B,EAAAC,EAAAC,cAAA,mBAnGwBc,IAAMC,WCoBvB4C,cA5Bb,SAAAA,EAAYpH,GAAgC,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAgH,GAAAlH,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkH,GAAA7G,KAAAH,KACpCJ,0EAIC,IAAAC,EAAAG,KAGP,OAAOA,KAAKJ,MAAMqC,KAAKgE,IAAI,SAACjB,GAAD,OASzB7B,EAAAC,EAAAC,cAAC4D,EAAD,CACErE,MAAO/C,EAAKD,MAAMgD,MAClBuD,IAAKnB,EAAWC,GAChBD,WAAYA,EACZ5C,MAAOvC,EAAKD,MAAMwC,MAClBgD,iBAAkBvF,EAAKD,MAAMwF,4BAxBLjB,IAAMC,WCqGvB8C,cAhGb,SAAAA,EAAYtH,GAAoB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IAC9BrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMJ,KAWR6E,QAAU,SAACpE,GACTR,EAAKS,SAAS,CAACqD,KAAMtD,EAAEG,OAAOC,SAbAZ,EAgBhC6E,WAAa,SAACrE,GACZR,EAAKS,SAAS,CAACqE,QAAStE,EAAEG,OAAOC,SAjBHZ,EAoBhC+E,eAAiB,SAACvE,GAChBR,EAAKS,SAAS,CAACS,YAAaV,EAAEG,OAAOC,SArBPZ,EAuBhCgF,YAAc,SAACxE,GACbR,EAAKS,SAAS,CAACwE,SAAUzE,EAAEG,OAAOC,SAxBJZ,EA2BhCsH,iBAAmB,SAAC9G,GAClBA,EAAEY,iBACFiB,QAAQC,IAAI,SAEZ,IAAMjB,EAAQ,CACZyC,KAAM9D,EAAKsB,MAAMwC,KACjBgB,QAAS9E,EAAKsB,MAAMwD,QACpB5D,YAAalB,EAAKsB,MAAMJ,YACxB+D,SAAUjF,EAAKsB,MAAM2D,UAGvB5C,QAAQC,IAAI,oBAAkBjB,GAE9B,IAEEG,MAAK,GAAAC,OAAI/B,EAAJ,gBAA2B,CAC9BgC,OAAQ,OACRC,QAAS,CACPE,eAAgB,mBAChBwD,cAAiBrF,EAAKD,MAAMgD,OAE9BjB,KAAMC,KAAKC,UAAUX,KAEpBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLpC,EAAKS,SAAS,CAAE8G,cAAc,IAC9BlF,QAAQC,IAAIF,KAEhB,MAAOQ,GACPP,QAAQC,IAAI,QAASM,KAtDvB5C,EAAKsB,MAAQ,CACXiG,cAAc,EACdzD,KAAM,GACNgB,QAAS,GACT5D,YAAa,GACb+D,SAAU,IAPkBjF,wEA6D9B,OACEsD,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEC,aAAc,KAC1BnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,2BACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAKmH,kBACnBhE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,OACZC,KAAK,OACLC,KAAK,OACLE,SAAU7D,KAAKyE,QAAQX,KAAK9D,QAE9BmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,UACZC,KAAK,OACLC,KAAK,UACLE,SAAU7D,KAAK0E,WAAWZ,KAAK9D,QAEjCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,eACZC,KAAK,MACLC,KAAK,cACLE,SAAU7D,KAAK4E,eAAed,KAAK9D,QAErCmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAY,WACZC,KAAK,OACLC,KAAK,WACLE,SAAU7D,KAAK6E,YAAYf,KAAK9D,QAElCmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,2BA1FwBS,IAAMC,6BCkGzBiD,cAnGb,SAAAA,EAAYzH,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,IAC3BxH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuH,GAAAlH,KAAAH,KAAMJ,KAUR0F,SAAW,SAACjF,GACVR,EAAKS,SAAS,CAACiF,MAAOlF,EAAEG,OAAOC,SAZJZ,EAe7B2F,QAAU,SAACnF,GACTR,EAAKS,SAAS,CAACqB,KAAMtB,EAAEG,OAAOC,SAhBHZ,EAmB7ByH,YAAc,SAACjH,GACbA,EAAEY,iBAGF,IAAMC,EAAQ,CACZqE,MAAO1F,EAAKsB,MAAMoE,MAClB5D,KAAM9B,EAAKsB,MAAMQ,MAUnB,IAEEN,MAAK,GAAAC,OACA/B,EADA,wBAAA+B,OAC8BzB,EAAKD,MAAM+F,QAAQV,IACpD,CACE1D,OAAQ,MACRC,QAAS,CACPE,eAAgB,mBAChBwD,cAAerF,EAAKD,MAAMgD,OAE5BjB,KAAMC,KAAKC,UAAUX,KAGtBY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAELC,QAAQC,IAAIF,GAEZpC,EAAKS,SAAS,CAAEiH,aAAa,MAEjC,MAAO9E,GACPP,QAAQC,IAAI,QAASM,KArDvB5C,EAAKsB,MAAQ,CACXoG,aAAa,EACbhC,MAAO,GACP5D,KAAM,IANmB9B,wEA6D3B,OACEsD,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEmB,UAAW,KACvBrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBAE6B,IAA3BtD,KAAKmB,MAAMoG,YAETpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAME,SAAUvD,KAAKsH,YAAajB,MAAO,CAAEC,aAAc,KACvDnD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAazD,KAAKJ,MAAM+F,QAAQJ,MAChC7B,KAAK,OACLC,KAAK,QACLC,UAAQ,EACRC,SAAU7D,KAAKsF,SAASxB,KAAK9D,QAG/BmD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,YAAazD,KAAKJ,MAAM+F,QAAQhE,KAChC+B,KAAK,OACLC,KAAK,OACL8D,WAAS,EACT7D,UAAQ,EACRC,SAAU7D,KAAKwF,QAAQ1B,KAAK9D,QAE9BmD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAb,aAIJP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,sCA7Fea,IAAMC,WC+BpBsD,cAzBb,SAAAA,EAAY9H,GAAkB,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,GAAA5H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4H,GAAAvH,KAAAH,KACtBJ,0EAIC,IAAA+H,EAEqB3H,KAAKJ,MAAM+F,QAA/BJ,EAFDoC,EAECpC,MAAO5D,EAFRgG,EAEQhG,KAAMsD,EAFd0C,EAEc1C,GAErB,OACE9B,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACE1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,aAAaP,GACjCpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAc3B,GAEdwB,EAAAC,EAAAC,cAACyE,EAAD,CAAgBlF,MAAO5C,KAAKJ,MAAMgD,MAAO+C,QAAS3F,KAAKJ,MAAM+F,UAC7DxC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQD,QAAS/D,KAAKJ,MAAMmI,cAAcjE,KAAK9D,KAAMiF,GAAKa,QAAQ,YAAYkC,MAAM,aAApF,0CAjBuB7D,IAAMC,WCwBxB6D,cA7BX,SAAAA,EAAYrI,GAAkB,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAiI,GAAAnI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmI,GAAA9H,KAAAH,KACpBJ,0EAID,IAAAC,EAAAG,KACL,OACImD,EAAAC,EAAAC,cAAA,WACKrD,KAAKJ,MAAM+F,QAAQM,IAAI,SAACN,GAAD,OAQpBxC,EAAAC,EAAAC,cAAC6E,EAAD,CACI/B,IAAKR,EAAQV,GACbU,QAASA,EACToC,cAAelI,EAAKD,MAAMmI,cAC1BnF,MAAO/C,EAAKD,MAAMgD,kBAtBRuB,IAAMC,WCgFzB+D,cA5Eb,SAAAA,EAAYvI,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IAC3BtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KA4BRmI,cAAgB,SAAC9C,GAGf,GADA/C,QAAQC,IAAI,QAAS8C,IACO,IAAxBpF,EAAKsB,MAAMiH,SACbvI,EAAKS,SAAS,CAAE8H,UAAU,IAC1BlG,QAAQC,IAAI,uBAEZ,IACEd,MAAK,GAAAC,OAAI/B,EAAJ,wBAAA+B,OAAkC2D,GAAM,CAC3C1D,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAerF,EAAKD,MAAMgD,UAG3Bd,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLC,QAAQC,IAAIF,GACZpC,EAAKS,SAAS,CAAE+H,gBAAgB,MAEpC,MAAO5F,GACPP,QAAQC,IAAI,QAASM,KA/CzB5C,EAAKsB,MAAQ,CACXwE,QAAS,GACTyC,UAAU,EACVC,gBAAgB,GANSxI,mFAUT,IAAAqD,EAAAlD,KAClBqB,MAAK,GAAAC,OAAI/B,EAAJ,iBAA4B,CAC/BiC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAelF,KAAKJ,MAAMgD,QAE5BrB,OAAQ,QAEPO,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACwG,GACLpG,QAAQC,IAAImG,GACZpF,EAAK5C,SAAS,CAAEqF,QAAS2C,EAAYrG,SAEtCe,MAAM,SAACP,GACNP,QAAQC,IAAI,eAAaM,KAE7BP,QAAQC,IAAI,wDA8BZ,OACEgB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMqC,WAAW,SAASC,QAAS,GACjCrF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,KAAK2C,MAAM,UAA/B,eAQAtF,EAAAC,EAAAC,cAACqF,EAAD,CACE/C,QAAS3F,KAAKmB,MAAMwE,QACpBoC,cAAe/H,KAAK+H,cACpBnF,MAAO5C,KAAKJ,MAAMgD,gBAtEIuB,IAAMC,WC8EvBuE,cA5Eb,SAAAA,EAAY/I,GAAmB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2I,IAC7B9I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6I,GAAAxI,KAAAH,KAAMJ,KA6BRwF,iBAAmB,SAACH,GAElB/C,QAAQC,IAAI,QAAS8C,GACrB,IACE5D,MAAK,GAAAC,OAAI/B,EAAJ,gBAAA+B,OAA0B2D,GAAM,CACnC1D,OAAQ,SACRC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAerF,EAAKD,MAAMgD,UAG3Bd,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLC,QAAQC,IAAIF,KAEhB,MAAOQ,GACPP,QAAQC,IAAI,QAASM,KA3CvB5C,EAAKsB,MAAQ,CACXc,KAAM,IAJqBpC,mFAQX,IAAAqD,EAAAlD,KAIlBqB,MAAK,GAAAC,OAAI/B,EAAJ,oBAA+B,CAClCiC,QAAS,IAAIC,QAAQ,CACnBC,eAAgB,mBAChBwD,cAAelF,KAAKJ,MAAMgD,QAE5BrB,OAAQ,QAEPO,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAC8G,GAEL1F,EAAK5C,SAAS,CAAE2B,KAAM2G,MAEvB5F,MAAM,SAACP,GACNP,QAAQC,IAAI,eAAaM,KAE7BP,QAAQC,IAAI,oDA0BZ,OACEgB,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEC,aAAc,KAC1BnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,yCACAH,EAAAC,EAAAC,cAACwF,EAAD,CACAzG,MAAOpC,KAAKJ,MAAMwC,MAAOQ,MAAO5C,KAAKJ,MAAMgD,QAE3CO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBAEAH,EAAAC,EAAAC,cAACyF,EAAD,CACE1G,MAAOpC,KAAKJ,MAAMwC,MAClBQ,MAAO5C,KAAKJ,MAAMgD,MAClBX,KAAMjC,KAAKmB,MAAMc,KACjBmD,iBAAkBpF,KAAKoF,mBAEzBjC,EAAAC,EAAAC,cAAC0F,EAAD,CACE3G,MAAOpC,KAAKJ,MAAMwC,MAAOQ,MAAO5C,KAAKJ,MAAMgD,gBAtEpBuB,IAAMC,WC+FxB4E,cA5Fb,SAAAA,EAAYpJ,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgJ,IAC3BnJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkJ,GAAA7I,KAAAH,KAAMJ,KAEDuB,MAAQ,CACXwE,QAAS,IAJgB9F,mFAST,IAAAqD,EAAAlD,KAClBqB,MAAK,GAAAC,OACA/B,EADA,wBAAA+B,OAC8BtB,KAAKJ,MAAMoF,WAAWC,IACvD,CACEzD,QAAS,CACPE,eAAgB,mBAChBwD,cAAelF,KAAKJ,MAAMgD,OAE5BrB,OAAQ,QAGTO,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAC6D,GAELzC,EAAK5C,SAAS,CAAEqF,QAASA,EAAQ1D,SAElCe,MAAM,SAACP,GACNP,QAAQC,IAAI,eAAaM,sCAOtB,IAAA0C,EAC8CnF,KAAKJ,MAAMoF,WAApDrB,GADLwB,EACCF,GADDE,EACKxB,MAAMgB,EADXQ,EACWR,QAAS5D,EADpBoE,EACoBpE,YAAa+D,EADjCK,EACiCL,SAGxC,OACE3B,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GAER9F,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACE1E,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,GACb/F,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrBjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYiD,cAAY,EAACH,UAAU,kBAAkBzC,GACrDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYiD,cAAY,EAACH,UAAU,qBAAqBzB,GACxDxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,mBAAmBrF,IAE3CoC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,EAACE,GAAI,GAAIC,GAAI,GACrBjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8C,UAAU,sBAAsBtB,IAE9C3B,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,sBAEZpG,KAAKmB,MAAMwE,QAAQkB,OAAS,EAC3B1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,sDAGAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,KAAKS,cAAY,GAArC,qBAKApD,EAAAC,EAAAC,cAACyD,EAAD,CACElE,MAAO5C,KAAKJ,MAAMgD,MAClB+C,QAAS3F,KAAKmB,MAAMwE,YAKN,IAArB3F,KAAKJ,MAAMwC,MAKVe,EAAAC,EAAAC,cAAC0D,EAAD,CAAkBnE,MAAO5C,KAAKJ,MAAMgD,MACpCoC,WAAYhF,KAAKJ,MAAMoF,aAErB7B,EAAAC,EAAAC,cAAA,wBAjFQc,IAAMC,WCuCrBiF,cA1Cb,SAAAA,EAAYzJ,GAAiB,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAqJ,GAAAvJ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuJ,GAAAlJ,KAAAH,KACrBJ,0EAIC,IAAAC,EAAAG,KAGP,OACEmD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACEgD,WAAS,EACTV,QAAS,EACTc,UAAU,SACVC,QAAQ,UAIRpG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,KAAK2C,MAAM,UAA/B,yBAGEzI,KAAKJ,MAAMqC,KAAKgE,IAAI,SAACjB,GAAD,OAQlB7B,EAAAC,EAAAC,cAACmG,EAAD,CACArD,IAAKnB,EAAWC,GAChBD,WAAYA,EACZpC,MAAO/C,EAAKD,MAAMgD,MAClBR,MAAOvC,EAAKD,MAAMwC,kBAjCO+B,IAAMC,WC4F5BqF,cA1Fb,SAAAA,EAAY7J,GAAgB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IAC1B5J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,KAAMJ,KAEDuB,MAAQ,CACXc,KAAM,GACNyH,SAAS,GALe7J,mFASR,IAAAqD,EAAAlD,KAElBqB,MAAK,GAAAC,OAAI/B,EAAJ,eAA0B,CAC7BiC,QAAS,CACPE,eAAgB,mBAChBwD,cAAelF,KAAKJ,MAAMgD,OAE5BrB,OAAQ,QAEPO,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAC8G,GAED1F,EAAK/B,MAAMuI,SACbxG,EAAK5C,SAAS,CAAE2B,KAAM2G,EAAe3G,SAGxCe,MAAM,SAACP,GACNP,QAAQC,IAAI,eAAaM,KAE7BP,QAAQC,IAAI,sEAIZnC,KAAKM,SAAS,CAACoJ,SAAS,qCAIxB,OACEvG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACK,QAAQ,SAASf,QAAS,IAElB,IAArBxI,KAAKJ,MAAMwC,MAIRe,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACK,QAAQ,SAASf,QAAS,GACxCrF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GAER9F,EAAAC,EAAAC,cAAC0F,EAAD,CAAmBnG,MAAO5C,KAAKJ,MAAMgD,MAAOR,MAAOpC,KAAKJ,MAAMwC,SAEhEe,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACV9F,EAAAC,EAAAC,cAACsG,EAAD,CACI1H,KAAMjC,KAAKmB,MAAMc,KACjBW,MAAO5C,KAAKJ,MAAMgD,MAClBR,MAAOpC,KAAKJ,MAAMwC,UAOxBe,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACI,UAAU,SAASf,WAAW,SAASC,QAAS,EAAGnC,MAAO,CAAEuD,OAAQ,KAClFzG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,MAApB,2DAEF3C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GAOR9F,EAAAC,EAAAC,cAACsG,EAAD,CACE1H,KAAMjC,KAAKmB,MAAMc,KACjBW,MAAO5C,KAAKJ,MAAMgD,MAClBR,MAAOpC,KAAKJ,MAAMwC,kBA1ER+B,IAAMC,WCoDnByF,cApDb,SAAAA,EAAYjK,GAAkB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,IAC5BhK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+J,GAAA1J,KAAAH,KAAMJ,KACDuB,MAAQ,CACXiB,OAAO,EACPU,OAAO,EACPF,MAAO,MALmB/C,mFAU5BG,KAAK8J,oDAIL,IAAMlH,EAAQhB,KAAKmI,MAAMrH,aAAasH,QAAQ,UAI1CpH,GAASA,EAAMR,QAAyB,IAAhBQ,EAAME,MAChC9C,KAAKM,SAAS,CACZ8B,OAAO,EACPU,OAAO,EACPF,MAAOhB,KAAKmI,MAAMrH,aAAasH,QAAQ,UAAWpH,QAE3CA,IAAyB,IAAhBA,EAAMR,MACxBpC,KAAKM,SAAS,CACZ8B,OAAO,EACPQ,MAAOhB,KAAKmI,MAAMrH,aAAasH,QAAQ,UAAWpH,QAGpD5C,KAAKM,SAAS,CAAE8B,OAAO,EAAOU,OAAO,qCAKvC,OACEK,EAAAC,EAAAC,cAAA,YACwB,IAArBrD,KAAKmB,MAAM2B,MAEVK,EAAAC,EAAAC,cAAC4G,EAAD,CAAoB7H,MAAOpC,KAAKmB,MAAMiB,MAAOQ,MAAO5C,KAAKmB,MAAMyB,QAI7DO,EAAAC,EAAAC,cAAC6G,EAAD,CACA9H,MAAOpC,KAAKmB,MAAMiB,MAAOQ,MAAO5C,KAAKmB,MAAMyB,gBA9CjCuB,IAAMC,WCqEb+F,cAlEb,SAAAA,EAAYvK,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IAClCtK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KAMRwK,aAAe,WACb1H,aAAa2H,QACbnI,QAAQC,IAAI,mBACZtC,EAAKS,SAAS,SAAAgK,GACZ,MAAO,CACLC,QAASD,EAAcC,WAV3B1K,EAAKsB,MAAQ,CACXoJ,QAAQ,GAHwB1K,wEAiB3B,IAAAqD,EAAAlD,KACP,OACEmD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACK,QAAQ,SAASf,QAAS,GACxCrF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACD,MAAI,EAACuB,GAAI,EAAGjB,QAAQ,UAClCpG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,QAAQ,MAApB,8BAGJ3C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACD,MAAI,EAACuB,GAAI,EAAGjC,WAAW,SAASe,UAAU,MAAMC,QAAQ,SAASf,QAAS,GACxFrF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMvG,GAAI,KACRf,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ8B,QAAQ,YAAYkC,MAAM,WAAlC,UAKJ7E,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMvG,GAAI,WACRf,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ8B,QAAQ,YAAYkC,MAAM,WAAlC,aAKJ7E,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMvG,GAAI,WACRf,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ8B,QAAQ,YAAYkC,MAAM,WAAlC,aAKJ7E,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM+C,MAAI,GACR9F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAMvG,GAAI,UAAWH,QAAS,WAAOb,EAAKkH,iBACxCjH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ8B,QAAQ,YAAYkC,MAAM,YAAY0C,kBAAgB,GAA9D,eAMiB,IAAtB1K,KAAKmB,MAAMoJ,OACNpH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAG,MAGbf,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAG,oBA7DFC,IAAMC,WCmBhBuG,mLAtBX,OACExH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACEtH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACI,UAAU,SAASC,QAAQ,SAAShB,WAAW,SAASC,QAAS,GAC/ErF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACD,MAAI,EAACT,QAAS,GAC5BrF,EAAAC,EAAAC,cAACwH,EAAD,OAEF1H,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMgD,WAAS,EAACD,MAAI,EAACK,UAAU,SAASC,QAAQ,SAAShB,WAAW,UAClEpF,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAO6G,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IACjC1G,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAO6G,OAAK,EAACC,KAAK,UAAUC,UAAWC,IACvC9H,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAO6G,OAAK,EAACC,KAAK,UAAUC,UAAW3G,gBAflCF,IAAMC,WCK3B/B,IAAW6I,WATY,CACrBC,MAAO,cACPC,OAAQ,CACNC,OAAQ,eACR/G,OAAQ,eACRgH,OAAQ,8BAML,IAUQC,EAVf,SAAAC,GAAA,SAAAD,IAAA,OAAAzL,OAAAC,EAAA,EAAAD,CAAAE,KAAAuL,GAAAzL,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyL,GAAAE,MAAAzL,KAAA0L,YAAA,OAAA5L,OAAA6L,EAAA,EAAA7L,CAAAyL,EAAAC,GAAA1L,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,EAAApF,IAAA,SAAA1F,MAAA,WAEI,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwI,EAAD,WAJRN,EAAA,CAAyBnH,aCDV0H,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAA5L,EAAA,GAAAyB,KAAAmK,EAAAnI,KAAA,WAAqBhC,KAAK,SAAAoK,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCHdS,IAASC,OACPtJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMsJ,WAAP,KACEvJ,EAAAC,EAAAC,cAACsJ,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.ebd1e899.chunk.js","sourcesContent":["let API_URL = '';\n\nswitch (window.location.hostname) {\n    case 'localhost':\n    case '127.0.0.1':\n        API_URL = 'https://restaurant-server-11-50-v2.herokuapp.com';\n        break;\n    case 'restaurant-front-end.herokuapp.com':\n        API_URL = 'https://restaurant-server-11-50-v2.herokuapp.com';\n        break;\n\n    default:\n    //no default \n}\n\n// console.log('current api url is', API_URL);\n\nexport default API_URL;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport API_URL from '../../helpers/environment';\nimport TagManager from 'react-gtm-module';\n\n\ntype SUNProps = {\n\n}\n\ntype SUNState = {\n  email: string,\n  password: string,\n  username: string, \n  phonenumber: string,\n  restaurantowner: boolean,\n  login: boolean,\n}\n\nclass SignUpNew extends React.Component <SUNProps, SUNState> {\n\n  constructor(props: SUNProps) {\n    super(props);\n    this.state = {\n      restaurantowner: false,\n      login: false,\n      email: '',\n      username: '',\n      password: '',\n      phonenumber: '',\n      \n    }\n  }\n\n  handleEmail = (e: any) => {\n    this.setState({email: e.target.value\n    })\n  }\n\n  handleUsername = (e: any) => {\n    this.setState({username: e.target.value\n    })\n  }\n\n  handlePassword = (e: any) => {\n    this.setState({password: e.target.value\n    })\n  }\n  \n  handlePhoneNumber = (e: any) => {\n    this.setState({phonenumber: e.target.value\n    })\n  }\n\n  register = (e: any) => {\n    e.preventDefault();\n\n    const input = {\n      email: this.state.email,\n      password: this.state.password,\n      username: this.state.username,\n      phonenumber: this.state.phonenumber,\n      restaurantowner: this.state.restaurantowner,\n    };\n\n    fetch(`${API_URL}/user/signup`, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(input),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.login === true) {\n\n          localStorage.setItem(\n            'token',\n            JSON.stringify({\n              login: true,\n              token: data.sessionToken,\n              admin: data.user.restaurantowner,\n            })\n          );\n          this.setState({ login: true })\n          \n          TagManager.dataLayer({\n            dataLayer: {\n              event: 'signUp',\n            }\n          })\n\n          console.log('done');\n        } else {\n          TagManager.dataLayer({\n            dataLayer: {\n              event: 'failed',\n            }\n          })\n          throw Error(data.error);\n        }\n      })\n      .catch((error) => {\n        alert('Something went wrong, please try again!');\n        console.log(error);\n      });\n  };\n\n  render() {\n\n\n    return (\n\n      <div>\n        <Typography>Create Your Account:</Typography>\n        <form onSubmit={this.register}>\n          <TextField\n            placeholder=\"email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={this.handleEmail.bind(this)}\n          />\n          <TextField\n            placeholder=\"username\"\n            type=\"text\"\n            name=\"username\"\n            // minLength=\"4\"\n            required\n            onChange={this.handleUsername.bind(this)}\n          />\n          <TextField\n            // pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            // minlength=\"8\"\n            required\n            onChange={this.handlePassword.bind(this)}\n          />\n          <TextField\n            placeholder=\"Phone Number\"\n            type=\"text\"\n            name=\"phonenumber\"\n            // minLength=\"7\"\n            // maxLength=\"16\"\n            onChange={this.handlePhoneNumber.bind(this)}\n          />\n          <p>Please select if you would like to setup a busines page:</p>\n          <input\n            type=\"checkbox\"\n            name=\"restaurantowner\"\n            onClick={(e) => (this.setState({restaurantowner: true}))}\n          />\n          <Button type=\"submit\"> Sign Up </Button>\n        </form>\n\n        {\n          this.state.login === true ? (\n            <div>\n              <Redirect to=\"/\" />\n            </div>\n          )\n            :\n            ''\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default SignUpNew;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport API_URL from '../../helpers/environment';\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport TagManager from 'react-gtm-module';\n\n\ntype USIProps = {\n\n}\n\ntype USIState = {\n  active: boolean,\n  email: string,\n  password: string,\n}\n\nclass UserSignIn extends React.Component <USIProps, USIState> {\n  //this will be a class component\n\n    constructor(props: USIProps) {\n    super(props);\n    this.state = {\n      active: false,\n      email: '',\n      password: '',\n    }\n  }\n\n  handleEmail = (e: any) => {\n    this.setState({email: e.target.value\n    })\n  }\n\n  handlePassword = (e: any) => {\n    this.setState({password: e.target.value\n    })\n  }\n\n  signIn = (e: any) => {\n    e.preventDefault();\n\n    const input = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    fetch(`${API_URL}/user/signin`, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(input),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.login === true) {\n          localStorage.setItem(\n            'token',\n            JSON.stringify({\n              login: true,\n              token: data.sessionToken,\n              admin: data.user.restaurantowner,\n            })\n\n          );\n          this.setState({ active: true })\n          TagManager.dataLayer({\n            dataLayer: {\n              event: 'signIn',\n            }\n          })\n        } else {\n          TagManager.dataLayer({\n            dataLayer: {\n              event: 'failed',\n            }\n          })\n          throw Error(data.error);\n        }\n      })\n      .catch((error) => {\n        alert(error);\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Typography>Welcome back. Please sign-in: </Typography>\n        <form onSubmit={this.signIn}>\n          <TextField\n            placeholder=\"email\"\n            type=\"text\"\n            name=\"email\"\n            onChange={this.handleEmail.bind(this)}\n                      />\n          <TextField\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={this.handlePassword.bind(this)}\n          />\n          <Button type=\"submit\"> Sign In </Button>\n        </form>\n        {\n          this.state.active === true ? (\n            <div>\n              <Redirect to=\"/\" />\n            </div>\n          )\n            :\n            ''\n        }\n      </div>\n    );\n  }\n}\n\nexport default UserSignIn;\n","import React, { Component } from 'react';\nimport API_URL from '../../helpers/environment';\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\n\ntype EditResProps = {\n  restaurant: {\n    id: number,\n    name: string,\n    phonenumber: string,\n    address: string,\n    category: string,\n  },\n  token: string,\n  deleteRestaurant: any,\n}\n\ntype EditResState = {\n  name: string,\n  address: string,\n  phonenumber: string,\n  category: string\n}\n\nclass EditRestaurantView extends React.Component <EditResProps, EditResState> {\n\n  constructor(props: EditResProps) {\n    super(props);\n      this.state = {\n        name: '',\n        address: '',\n        phonenumber: '',\n        category: ''\n      }\n  }\n\n  setName = (e: any) => {\n    this.setState({name: e.target.value})\n  }\n\n  setAddress = (e: any) => {\n    this.setState({address: e.target.value})\n  }\n  \n  setPhonenumber = (e: any) => {\n    this.setState({phonenumber: e.target.value})\n  }\n  setCategory = (e: any) => {\n    this.setState({category: e.target.value})\n  }\n\n  editRestaurant = (e: any) => {\n    e.preventDefault();\n    // console.log('works');\n\n    const input = {\n      name: this.state.name,\n      address: this.state.address,\n      phonenumber: this.state.phonenumber,\n      category: this.state.category,\n    };\n\n    try {\n      // const input = this.state;\n      fetch(`${API_URL}/restaurant/${this.props.restaurant.id}`, {\n        method: 'PUT',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: this.props.token,\n        }),\n        body: JSON.stringify(input),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          //make page refresh\n          console.log(data);\n        });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  render() {\n\n    const { id, name, address, phonenumber, category } = this.props.restaurant;\n\n    return (\n      <div>\n        <Typography>Edit this restaurant</Typography>\n        <form onSubmit={this.editRestaurant}>\n          <TextField\n            placeholder={name}\n            type=\"text\"\n            name=\"name\"\n            required\n            onChange={this.setName.bind(this)}\n          />\n          <TextField\n            placeholder={address}\n            type=\"text\"\n            name=\"address\"\n            required\n            onChange={this.setAddress.bind(this)}\n          />\n          <TextField\n            placeholder={phonenumber}\n            type=\"text\"\n            name=\"phonenumber\"\n            onChange={this.setPhonenumber.bind(this)}\n          />\n          <TextField\n            placeholder={category}\n            type=\"text\"\n            name=\"category\"\n            required\n            onChange={this.setCategory.bind(this)}\n          />\n          <Button type=\"submit\">Edit Restaurant </Button>\n        </form>\n        <Button onClick={this.props.deleteRestaurant.bind(this, id)}>\n          Delete Restaurant\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default EditRestaurantView;\n","import React, { Component } from 'react';\nimport { Button, TextField, Typography } from '@material-ui/core'\nimport API_URL from '../../helpers/environment';\n\ntype NewCommentProps = {\n  token: string,\n  restaurant: any\n}\n\ntype NewCommentState = {\n  title: string,\n  body: string,\n  commentmade: boolean\n}\n\n\nclass CreateNewComment extends React.Component <NewCommentProps, NewCommentState> {\n  constructor(props: NewCommentProps) {\n    super(props);\n    this.state = {\n      commentmade: false,\n      title: '',\n      body: '',\n    }\n  }\n\n  setTitle = (e: any) => {\n    this.setState({title: e.target.value})\n  }\n\n  setBody = (e: any) => {\n    this.setState({body: e.target.value})\n  } \n\n\n  createComment = (e: any) => {\n    e.preventDefault();\n    console.log('works');\n\n    const input = {\n      title: this.state.title,\n      body: this.state.body,\n      restaurantid: this.props.restaurant.id,\n    };\n\n    console.log('test input -->', input);\n\n    try {\n      // const input = this.state;\n      fetch(`${API_URL}/comment/`, {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: this.props.token,\n        }),\n        body: JSON.stringify(input),\n      })\n        .then((response) => response.json())\n        .then((comment) => {\n          console.log('comment---> ', comment);\n          this.setState({ commentmade: true });\n        });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Typography>Leave a comment</Typography>\n        {\n          this.state.commentmade === false\n            ? <form onSubmit={this.createComment}>\n              <TextField\n                id=\"outlined-basic\" label=\"Title of Comment\" variant=\"outlined\"\n                placeholder=\"Comment Title\"\n                type=\"text\"\n                name=\"title\"\n                required\n                onChange={this.setTitle.bind(this)}\n              />\n              <TextField\n                id=\"outlined-basic\" label=\"Comment Details\" variant=\"outlined\"\n                placeholder=\"Comment Details\"\n                type=\"text\"\n                name=\"body\"\n                required\n                onChange={this.setBody.bind(this)}\n              />\n              <Button type=\"submit\"> Submit </Button>\n            </form>\n            :\n            <Typography>\n              Comment was made.\n            </Typography>\n        }\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default CreateNewComment;\n","import React, { Component } from 'react';\nimport { Typography, Grid } from '@material-ui/core';\n\ntype CommentProps = {\n  token: string,\n  comment: any,\n}\ntype CommentState = {\n  test: string\n}\n\nclass CustomerCommentView extends React.Component <CommentProps , CommentState> {\n  constructor(props: CommentProps) {\n    super(props);\n    this.state = {\n      test: '',\n    }\n  }\n\n  render() {\n    return this.props.comment.map((comment: any) => (\n      <Grid key={comment.id} className=\"single-comment\" style={{ marginBottom: 10 }} >\n        <Typography variant=\"subtitle2\" > {comment.title}</Typography>\n        <Typography variant=\"caption\" gutterBottom>{comment.body}</Typography>\n      </Grid>\n    ));\n  }\n}\n\nexport default CustomerCommentView;\n","import React, { Component } from 'react';\nimport API_URL from '../../helpers/environment';\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\nimport EditRestaurantView from './EditRestaurantView';\nimport CreateNewComment from '../user/CreateNewComment';\nimport CustomerCommentView from '../customer-view/CustomerCommentView';\n\ntype NewCardProps = {\n  login: boolean,\n  token: string,\n  restaurant: {\n    id: number, \n    name: string,\n    address: string,\n    phonenumber: string,\n    category: string\n  },\n  deleteRestaurant: any,\n}\n\ntype NewCardState = {\n  isOpen: boolean,\n  comment: any,\n}\n\nclass NewRestaurantCard extends React.Component <NewCardProps, NewCardState> {\n  constructor(props:NewCardProps) {\n    super(props);\n\n    this.state = {\n      isOpen: false, \n      comment: [],\n    };\n  }\n\n  componentDidMount() {\n    // this.tokenFinder(); //get the token & find out if a user is an admin\n    // this.getUserRestaurants();\n    // console.log('fetch started');\n    fetch(\n      `${API_URL}/comment/restaurant/${this.props.restaurant.id}`,\n      {\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: this.props.token,\n        }),\n        method: 'GET',\n      }\n    )\n      .then((response) => response.json())\n      .then((comment) => {\n        // console.log(restaurantdata);\n        this.setState({ comment: comment.data });\n      })\n      .catch((error) => {\n        console.log('error--->', error);\n      });\n    console.log('fetch finished!');\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    // console.log('card', this.props.restaurant);\n\n    const { name, address, phonenumber, category } = this.props.restaurant;\n\n    return (\n      <div>\n        <div className=\"restaurantcard\" style={{ marginBottom: 10 }} >\n          <Typography className=\"restaurantname\">Name: {name}</Typography>\n          <Typography className=\"`restaurantaddress`\">Address: {address}</Typography>\n          <Typography className=\"restaurantphone\">Phone Number: {phonenumber}</Typography>\n          <Typography className=\"restaurantcat\">Category: {category}</Typography>\n        </div>\n\n        <div style={{ marginBottom: 10 }} >\n          {/* <EditRestaurant\n            restaurant={this.props.restaurant}\n            token={this.props.token}\n            deleteRestaurant={this.props.deleteRestaurant}\n          /> */}\n          <EditRestaurantView\n          restaurant={this.props.restaurant}\n          token={this.props.token}\n          deleteRestaurant={this.props.deleteRestaurant}\n          />\n\n          \n        </div>\n\n        <div className=\"restaurantcomments\" style={{ marginBottom: 10 }} >\n          {this.state.comment.length === 0 ? (\n            <div>\n              <Typography>No users have commented on this restaurant.</Typography>\n            </div>\n          ) : (\n              <CustomerCommentView \n              token={this.props.token}\n              comment={this.state.comment}\n              />\n              /* <CustomerComments\n                token={this.props.token}\n                comment={this.state.comment}\n              /> */\n            )}\n\n          {this.props.login === true ? (\n            <div style={{ marginBottom: 10 }} >\n              {/* <CreateComment\n                token={this.props.token}\n                restaurant={this.props.restaurant}\n              /> */}\n              <CreateNewComment \n                token={this.props.token}\n                restaurant={this.props.restaurant}\n              />\n            </div>\n          ) : null}\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default NewRestaurantCard;\n","import React, { Component } from 'react';\nimport NewRestaurantCard from './NewRestaurantCard';\n\ntype RestaurantDisplayProps = {\n  login: boolean,\n  token: string,\n  data: any,\n  deleteRestaurant: any\n}\n\ntype RestaurantDisplayState = {\n  \n}\n\n\nclass RestaurantDisplay extends React.Component <RestaurantDisplayProps, RestaurantDisplayState> {\n\n  constructor(props: RestaurantDisplayProps) {\n    super(props);\n\n  }\n\n  render() {\n    // console.log(this.props.data);\n\n    return this.props.data.map((restaurant: any) => (\n      /* <RestaurantCard\n        token={this.props.token}\n        key={restaurant.id}\n        restaurant={restaurant}\n        login={this.props.login}\n        deleteRestaurant={this.props.deleteRestaurant}\n      /> */\n\n      <NewRestaurantCard \n        token={this.props.token}\n        key={restaurant.id}\n        restaurant={restaurant}\n        login={this.props.login}\n        deleteRestaurant={this.props.deleteRestaurant}\n      />\n    ));\n  }\n}\n\nexport default RestaurantDisplay;\n","import React, { Component } from 'react';\nimport API_URL from '../../helpers/environment';\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\n\ntype NewResProps = {\n  login: boolean,\n  token: string,\n\n}\n//these are types for the state variable\n\ntype NewResState = {\n  createdPlace: boolean,\n  name: string,\n  address: string,\n  phonenumber: string,\n  category: string,\n}\n\nclass CreateNewRestaurant extends React.Component <NewResProps, NewResState> {\n  constructor(props: NewResProps) {\n    super(props);\n    this.state = {\n      createdPlace: false,\n      name: '',\n      address: '',\n      phonenumber: '',\n      category: '',\n    }\n  }\n\n\n  setName = (e: any) => {\n    this.setState({name: e.target.value})\n  }\n\n  setAddress = (e: any) => {\n    this.setState({address: e.target.value})\n  }\n  \n  setPhonenumber = (e: any) => {\n    this.setState({phonenumber: e.target.value})\n  }\n  setCategory = (e: any) => {\n    this.setState({category: e.target.value})\n  }\n\n  createRestaurant = (e: any) => {\n    e.preventDefault();\n    console.log('works');\n\n    const input = {\n      name: this.state.name,\n      address: this.state.address,\n      phonenumber: this.state.phonenumber,\n      category: this.state.category,\n    };\n\n    console.log('test input -->', input);\n\n    try {\n      // const input = this.state;\n      fetch(`${API_URL}/restaurant/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token,\n        },\n        body: JSON.stringify(input),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({ createdPlace: true });\n          console.log(data);\n        });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ marginBottom: 10 }} >\n        <Typography>Create Restaurant </Typography>\n        <form onSubmit={this.createRestaurant}>\n          <TextField\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.setName.bind(this)}\n          />\n          <TextField\n            placeholder=\"Address\"\n            type=\"text\"\n            name=\"address\"\n            onChange={this.setAddress.bind(this)}\n          />\n          <TextField\n            placeholder=\"phone number\"\n            type=\"tel\"\n            name=\"phonenumber\"\n            onChange={this.setPhonenumber.bind(this)}\n          />\n          <TextField\n            placeholder=\"category\"\n            type=\"text\"\n            name=\"category\"\n            onChange={this.setCategory.bind(this)}\n          />\n          <Button type=\"submit\">Add Restaurant</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateNewRestaurant;\n","import React, { Component } from 'react';\nimport { Typography, Button, TextField } from '@material-ui/core'\nimport API_URL from '../../helpers/environment';\n\ntype ECNProps = {\n  comment: any,\n  token: string,\n}\n\ntype ECNState = {\n  title: string,\n  body: string,\n  commentedit: boolean,\n}\n\nclass EditCommentNew extends React.Component <ECNProps, ECNState> {\n\n\n  constructor(props: ECNProps) {\n    super(props)\n\n    this.state = {\n      commentedit: false,\n      title: '',\n      body: ''\n    };\n  }\n\n\n  setTitle = (e: any) => {\n    this.setState({title: e.target.value})\n  }\n\n  setBody = (e: any) => {\n    this.setState({body: e.target.value})\n  }\n\n  editComment = (e: any) => {\n    e.preventDefault();\n    // console.log('works');\n\n    const input = {\n      title: this.state.title,\n      body: this.state.body,\n    };\n\n    // console.log(\n    //   'test input -->',\n    //   input,\n    //   'fetch url--->',\n    //   `http://localhost:2000/comment/restaurant/${this.props.comment.id}`\n    // );\n\n    try {\n      // const input = this.state;\n      fetch(\n        `${API_URL}/comment/restaurant/${this.props.comment.id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: this.props.token,\n          },\n          body: JSON.stringify(input),\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          //make page refresh\n          console.log(data);\n\n          this.setState({ commentedit: true });\n        });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: 16 }}>\n        <Typography>Edit Comment</Typography>\n        {\n          this.state.commentedit === false\n            ?\n            <div>\n              <form onSubmit={this.editComment} style={{ marginBottom: 10 }}>\n                <TextField\n                  placeholder={this.props.comment.title}\n                  type=\"text\"\n                  name=\"title\"\n                  required\n                  onChange={this.setTitle.bind(this)}\n                />\n\n                <TextField\n                  placeholder={this.props.comment.body}\n                  type=\"text\"\n                  name=\"body\"\n                  fullWidth\n                  required\n                  onChange={this.setBody.bind(this)}\n                />\n                <Button type=\"submit\"> Submit</Button>\n              </form>\n            </div>\n            :\n            <div>\n              <Typography>Comment was updated.</Typography>\n            </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default EditCommentNew;\n","import React, { Component } from 'react';\nimport { Typography, Button, Card, CardContent } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Subtitles } from '@material-ui/icons';\nimport EditCommentNew from './EditCommentNew';\n\ntype CBCprops = {\n  comment: {\n    title: string,\n    body: string,\n    id: number\n  }\n  token: string,\n  deleteComment: any\n}\n\ntype CBCstate = {\n\n}\n\nclass CustomerBioComment extends React.Component <CBCprops, CBCstate> {\n  constructor(props: CBCprops) {\n    super(props);\n\n  }\n\n  render() {\n\n    const { title, body, id } = this.props.comment;\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"subtitle2\">{title}</Typography>\n          <Typography >{body}</Typography>\n          {/* <EditComment token={this.props.token} comment={this.props.comment} /> */}\n          <EditCommentNew token={this.props.token} comment={this.props.comment} />\n          <Button onClick={this.props.deleteComment.bind(this, id)} variant=\"contained\" color=\"secondary\">\n            Doubleclick to delete comment\n          </Button>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default CustomerBioComment;\n","import React, { Component } from 'react'\nimport CustomerBioCommentView from './CustomerBioCommentView';\n\ntype CBPNProps  = {\n    comment: any, \n    token: string, \n    deleteComment: Function,\n}\n\ntype CBPNState = {\n\n}\n\nclass CustomerBioPanelNew extends React.Component <CBPNProps, CBPNState> {\n\n    constructor(props:CBPNProps) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.props.comment.map((comment: any) => (\n                    // <CustomerBioComment\n                    //     key={comment.id}\n                    //     comment={comment}\n                    //     deleteComment={this.props.deleteComment}\n                    //     token={this.props.token}\n                    // />\n\n                    <CustomerBioCommentView\n                        key={comment.id}\n                        comment={comment}\n                        deleteComment={this.props.deleteComment}\n                        token={this.props.token}\n                    />\n\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default CustomerBioPanelNew\n","import React, { Component } from 'react';\nimport { Typography, Grid } from '@material-ui/core'\nimport API_URL from '../../helpers/environment';\nimport CustomerBioPanelNew from './CustomerBioPanelNew';\n\ntype BioProps = {\n  token: string,\n  login: boolean\n}\n\ntype BioState = {\n  comment: any,\n  deleteme: boolean,\n  deletedcomment: boolean\n}\n\nclass CustomerBiography extends React.Component <BioProps , BioState> {\n  constructor(props: BioProps) {\n    super(props);\n\n    this.state = {\n      comment: [],\n      deleteme: false,\n      deletedcomment: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${API_URL}/comment/user`, {\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        Authorization: this.props.token,\n      }),\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((usercomment) => {\n        console.log(usercomment);\n        this.setState({ comment: usercomment.data });\n      })\n      .catch((error) => {\n        console.log('error--->', error);\n      });\n    console.log('res fetch finished!');\n  }\n\n  deleteComment = (id: number) => {\n    // e.preventDefault();\n    console.log('works', id);\n    if (this.state.deleteme === false) {\n      this.setState({ deleteme: true })\n      console.log('prep to delete')\n    } else {\n      try {\n        fetch(`${API_URL}/comment/restaurant/${id}`, {\n          method: 'DELETE',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            Authorization: this.props.token,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            this.setState({ deletedcomment: true });\n          });\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Grid alignItems=\"center\" spacing={3}>\n        <Typography variant=\"h4\" align=\"center\">My comments</Typography>\n\n        {/* <CustomerBioPanel\n          comment={this.state.comment}\n          deleteComment={this.deleteComment}\n          token={this.props.token}\n        /> */}\n\n        <CustomerBioPanelNew \n          comment={this.state.comment}\n          deleteComment={this.deleteComment}\n          token={this.props.token}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default CustomerBiography;\n","import React, { Component } from 'react';\nimport API_URL from '../../helpers/environment';\nimport { Typography, } from '@material-ui/core'\nimport RestaurantDisplay from './RestaurantDisplay';\nimport CreateNewRestaurant from './CreateNewRestaurant';\nimport CustomerBiography from '../customer-view/CustomerBiography';\n\ntype AdminProps = {\n  login: boolean,\n  token: string\n}\n\ntype AdminState = {\n  data: object,\n\n}\n\nclass AdministratorPanel extends React.Component <AdminProps, AdminState> {\n  constructor(props: AdminProps) {\n    super(props);\n\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount() {\n    // this.tokenFinder(); //get the token & find out if a user is an admin\n    // this.getUserRestaurants();\n    // console.log('fetch started');\n    fetch(`${API_URL}/restaurant/user`, {\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        Authorization: this.props.token,\n      }),\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((restaurantdata) => {\n        // console.log(restaurantdata);\n        this.setState({ data: restaurantdata });\n      })\n      .catch((error) => {\n        console.log('error--->', error);\n      });\n    console.log('fetch finished!');\n  }\n\n  deleteRestaurant = (id: any) => {\n    // e.preventDefault();\n    console.log('works', id);\n    try {\n      fetch(`${API_URL}/restaurant/${id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          Authorization: this.props.token,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n        });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n\n\n  render() {\n    return (\n      <div style={{ marginBottom: 10 }} >\n        <Typography>Restaurant Administration Panel </Typography>\n        <CreateNewRestaurant \n        login={this.props.login} token={this.props.token}\n        />\n        <br />\n        <Typography>Your Restaurants</Typography>\n\n        <RestaurantDisplay\n          login={this.props.login}\n          token={this.props.token}\n          data={this.state.data}\n          deleteRestaurant={this.deleteRestaurant}\n        />\n        <CustomerBiography \n          login={this.props.login} token={this.props.token} \n        />\n      </div>\n    );\n  }\n}\n\nexport default AdministratorPanel;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport API_URL from '../../helpers/environment';\nimport CustomerCommentView from './CustomerCommentView';\nimport CreateNewComment from '../user/CreateNewComment';\n\ntype CCNProps = {\n  restaurant: any,\n  token: string,\n  login: boolean\n}\n\ntype CCNState = {\n  comment: any,\n}\n\nclass CustomerCardNew extends React.Component <CCNProps, CCNState> {\n  constructor(props: CCNProps) {\n    super(props);\n\n    this.state = {\n      comment: [],\n    };\n\n  }\n\n  componentDidMount() {\n    fetch(\n      `${API_URL}/comment/restaurant/${this.props.restaurant.id}`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.props.token,\n        },\n        method: 'GET',\n      }\n    )\n      .then((response) => response.json())\n      .then((comment) => {\n        // console.log(restaurantdata);\n        this.setState({ comment: comment.data });\n      })\n      .catch((error) => {\n        console.log('error--->', error);\n      });\n    // console.log('comment fetch finished!');\n  }\n\n\n\n  render() {\n    const { id, name, address, phonenumber, category } = this.props.restaurant;\n    // const classes = makeStyles();\n\n    return (\n      <Grid item>\n\n        <Card>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={12} sm={6}>\n                <Typography gutterBottom className=\"restaurantname\">{name}</Typography>\n                <Typography gutterBottom className=\"restaurantaddress\">{address}</Typography>\n                <Typography className=\"restaurantphone\">{phonenumber}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography className=\"restaurantcategory\">{category}</Typography>\n              </Grid>\n              <Grid item>\n                <div className=\"restaurantcomments\">\n\n                  {this.state.comment.length > 1 ? (\n                    <div>\n                      <Typography>No users have commented on this restaurant. </Typography>\n                    </div>\n                  ) : (\n                      <div>\n                        <Typography variant=\"h6\" gutterBottom>Customer Comments</Typography>\n                        {/* <CustomerComments\n                          token={this.props.token}\n                          comment={this.state.comment}\n                        /> */}\n                        <CustomerCommentView\n                          token={this.props.token}\n                          comment={this.state.comment}\n                        />\n                      </div>\n                    )}\n\n                  {this.props.login === true ? (\n                    // <CreateComment\n                    //   token={this.props.token}\n                    //   restaurant={this.props.restaurant}\n                    // />\n                    <CreateNewComment token={this.props.token}\n                    restaurant={this.props.restaurant} />\n                  ) : (\n                      <br />\n                    )}\n                </div>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nexport default CustomerCardNew;\n","import React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomerCardNew from './CustomerCardNew';\n\ntype CRNProps = {\n  data:any,\n  token: string,\n  login: boolean\n}\n\ntype CRNState = {\n\n}\n\nclass CustomerRestaurantsNew extends React.Component <CRNProps, CRNState> {\n  constructor(props:CRNProps) {\n    super(props);\n  }\n\n\n  render() {\n    // console.log('customers only', this.props.data);\n\n    return (\n      <Grid\n        container\n        spacing={3}\n        direction=\"column\"\n        justify=\"center\"\n      // alignItems=\"flex-end\"\n      >\n\n        <Typography variant=\"h4\" align=\"center\">Some fine restaurants</Typography>\n\n        {\n          this.props.data.map((restaurant: any) => (\n            // <CustomerCard\n            //   key={restaurant.id}\n            //   restaurant={restaurant}\n            //   token={this.props.token}\n            //   login={this.props.login}\n            // />\n\n            <CustomerCardNew \n            key={restaurant.id}\n            restaurant={restaurant}\n            token={this.props.token}\n            login={this.props.login} \n            />\n          ))\n        }\n\n      </Grid>\n    )\n  }\n}\n\nexport default CustomerRestaurantsNew;\n","import React, { Component } from 'react';\nimport { Typography, Grid, } from '@material-ui/core'\nimport API_URL from '../../helpers/environment';\nimport CustomerBiography from './CustomerBiography';\nimport CustomerRestaurantsNew from './CustomerRestaurantsNew';\n\ntype CNProps = {\n  token: string,\n  login: boolean\n}\n\ntype CNState = {\n  data: any,\n  mounted: boolean,\n}\n\nclass CustomersNew extends  React.Component <CNProps, CNState> {\n  constructor(props: CNProps) {\n    super(props);\n\n    this.state = {\n      data: [],\n      mounted: true,\n    };\n  }\n\n  componentDidMount() {\n\n    fetch(`${API_URL}/restaurant`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.props.token,\n      },\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((restaurantdata) => {\n        // console.log(restaurantdata);\n        if (this.state.mounted) {\n          this.setState({ data: restaurantdata.data });\n        }\n      })\n      .catch((error) => {\n        console.log('error--->', error);\n      });\n    console.log('res fetch finished!');\n  }\n\n  componentWillUnmount() {\n    this.setState({mounted: false})\n  }\n\n  render() {\n    return (\n      <Grid container justify=\"center\" spacing={5} >\n\n        {this.props.login === true\n          ?\n\n          (\n            <Grid container justify=\"center\" spacing={5}>\n              <Grid item>\n                {/* <CustomerBio token={this.props.token} login={this.props.login} /> */}\n                <CustomerBiography token={this.props.token} login={this.props.login}  />\n              </Grid>\n              <Grid item>\n              <CustomerRestaurantsNew\n                  data={this.state.data}\n                  token={this.props.token}\n                  login={this.props.login}\n                />\n              </Grid>\n            </Grid>\n          )\n          :\n          (\n            <Grid container direction=\"column\" alignItems=\"center\" spacing={5} style={{ margin: 20 }}>\n              <Grid item>\n                <Typography variant=\"h6\">Sign In or Sign Up to create, edit or delete comments!</Typography>\n              </Grid>\n              <Grid item>\n                {/* <CustomerRestaurants\n                  data={this.state.data}\n                  token={this.props.token}\n                  login={this.props.login}\n                /> */}\n\n                <CustomerRestaurantsNew\n                  data={this.state.data}\n                  token={this.props.token}\n                  login={this.props.login}\n                />\n              </Grid>\n            </Grid>\n          )\n        }\n\n        {/* <CustomerRestaurants\n          data={this.state.data}\n          token={this.props.token}\n          login={this.props.login}\n        /> */}\n      </Grid>\n    );\n  }\n}\n\nexport default CustomersNew;\n","import React, { Component } from 'react';\nimport AdministratorPanel from '../admin-only/AdministratorPanel';\nimport CustomersNew from '../customer-view/CustomersNew';\n\ntype HomeProps = {\n\n}\n\ntype HomeState = {\n  login: boolean,\n  admin: boolean,\n  token: any,\n}\n\nclass NewHome extends React.Component <HomeProps, HomeState> {\n\n  constructor(props: HomeProps) {\n    super(props)\n    this.state = {\n      login: false,\n      admin: false,\n      token: null,\n    };\n  }\n\n  componentDidMount() {\n    this.tokenFinder(); //get the token & find out if a user is an admin\n  }\n\n  tokenFinder() {\n    const token = JSON.parse(localStorage.getItem('token')!);\n\n    // if(!token)\n\n    if (token && token.login && token.admin === true) {\n      this.setState({\n        login: true,\n        admin: true,\n        token: JSON.parse(localStorage.getItem('token')!).token,\n      });\n    } else if (token && token.login === true) {\n      this.setState({\n        login: true,\n        token: JSON.parse(localStorage.getItem('token')!).token,\n      });\n    } else {\n      this.setState({ login: false, admin: false });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.admin === true ? (\n          /* <AdminPanel login={this.state.login} token={this.state.token} /> */\n          <AdministratorPanel login={this.state.login} token={this.state.token} />\n        ) : (\n            /* <Customers login={this.state.login} token={this.state.token} /> */\n\n            <CustomersNew \n            login={this.state.login} token={this.state.token}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default NewHome;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { Grid, Button, Typography } from '@material-ui/core';\n\ntype NavigationProps = {\n\n}\ntype NavigationState = {\n  logout: boolean; \n}\n\nclass Navigation extends React.Component <NavigationProps, NavigationState> {\n  \n  constructor(props: NavigationProps) {\n    super(props);\n    this.state = {\n      logout: false,\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.clear()\n    console.log('user logged out')\n    this.setState(previousState => {\n      return {\n        logout: !previousState.logout\n      }\n    })\n  }\n  \n  render() {\n    return (\n      <Grid container justify=\"center\" spacing={6}>\n        <Grid container item md={4} justify=\"center\">\n          <Grid item>\n            <Typography variant=\"h2\">Restaurant Reviews Demo </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item md={8} alignItems=\"center\" direction=\"row\" justify=\"center\" spacing={4}>\n          <Grid item >\n            <Link to={'/'}>\n              <Button variant=\"contained\" color=\"primary\">\n                Home\n              </Button>\n            </Link>\n          </Grid>\n          <Grid item >\n            <Link to={'/signup'}>\n              <Button variant=\"contained\" color=\"primary\">\n                Sign Up\n          </Button>\n            </Link>\n          </Grid>\n          <Grid item >\n            <Link to={'/signin'}>\n              <Button variant=\"contained\" color=\"primary\">\n                Sign In\n            </Button>\n            </Link>\n          </Grid>\n          <Grid item >\n            <Link to={'/signin'} onClick={() => {this.handleLogout()}}>\n              <Button variant=\"contained\" color=\"secondary\" disableElevation>\n                Log Out\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        {this.state.logout === false ? (\n              <Redirect to=\"/\" />\n          )\n            :\n              <Redirect to=\"/signin\" />\n        }\n      </Grid>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport UserSignUp from '../user/UserSignUp';\nimport UserSignIn from '../user/UserSignIn';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Grid } from '@material-ui/core';\nimport NewHome from './NewHome';\nimport Navigation from './Navigation';\n\nclass Parent extends React.Component {\n\n  //on click function to render the body / visit component / route to update the state?\n  render() {\n    return (\n      <Container>\n        <BrowserRouter>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3}         >\n            <Grid container item spacing={3}>\n              <Navigation />\n            </Grid>\n            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\n              <Switch>\n                <Route exact path=\"/\" component={NewHome} />\n                <Route exact path=\"/signup\" component={UserSignUp} />\n                <Route exact path=\"/signin\" component={UserSignIn} />\n              </Switch>\n            </Grid>\n          </Grid>\n        </BrowserRouter>\n      </Container >\n\n    );\n  }\n}\n\nexport default Parent;\n","import React, { Component } from 'react';\nimport TagManager from 'react-gtm-module';\nimport Parent from './components/layout/Parent';\n\nconst tagManagerArgs = {\n  gtmId: 'GTM-W35BT76',\n  events: {\n    signUp: 'User Sign Up',\n    signIn: 'User Sign In',\n    failed: 'Authentification Blocked'\n  }\n}\n\nTagManager.initialize(tagManagerArgs)\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Parent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}