[{"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\index.tsx":"1","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\App.tsx":"3","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\helpers\\environment.js":"4","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\Navigation.tsx":"5","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\Parent.tsx":"6","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\NewHome.tsx":"7","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\AdministratorPanel.tsx":"8","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\RestaurantDisplay.tsx":"9","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\NewRestaurantCard.tsx":"10","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\EditRestaurantView.tsx":"11","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\CreateNewRestaurant.tsx":"12","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\CreateNewComment.tsx":"13","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerCommentView.tsx":"14","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBiography.tsx":"15","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomersNew.tsx":"16","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerRestaurantsNew.tsx":"17","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerCardNew.tsx":"18","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBioPanelNew.tsx":"19","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBioCommentView.tsx":"20","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\EditCommentNew.tsx":"21","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\UserSignUp.tsx":"22","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\UserSignIn.tsx":"23"},{"size":500,"mtime":1611633734583,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":247,"mtime":1615162862576,"results":"27","hashOfConfig":"25"},{"size":439,"mtime":1612039686654,"results":"28","hashOfConfig":"25"},{"size":2172,"mtime":1612323311656,"results":"29","hashOfConfig":"25"},{"size":1212,"mtime":1612718262557,"results":"30","hashOfConfig":"25"},{"size":1683,"mtime":1612717798452,"results":"31","hashOfConfig":"25"},{"size":2494,"mtime":1612717498583,"results":"32","hashOfConfig":"25"},{"size":1048,"mtime":1612717521570,"results":"33","hashOfConfig":"25"},{"size":3869,"mtime":1612717962238,"results":"34","hashOfConfig":"25"},{"size":3172,"mtime":1612560486150,"results":"35","hashOfConfig":"25"},{"size":2904,"mtime":1612477622878,"results":"36","hashOfConfig":"25"},{"size":2632,"mtime":1612562568635,"results":"37","hashOfConfig":"25"},{"size":776,"mtime":1612657171064,"results":"38","hashOfConfig":"25"},{"size":2424,"mtime":1612717830859,"results":"39","hashOfConfig":"25"},{"size":2928,"mtime":1612718136644,"results":"40","hashOfConfig":"25"},{"size":1340,"mtime":1612717855229,"results":"41","hashOfConfig":"25"},{"size":3494,"mtime":1612717471550,"results":"42","hashOfConfig":"25"},{"size":1152,"mtime":1612717838108,"results":"43","hashOfConfig":"25"},{"size":1239,"mtime":1612849604766,"results":"44","hashOfConfig":"25"},{"size":2784,"mtime":1612710286929,"results":"45","hashOfConfig":"25"},{"size":3975,"mtime":1612714875509,"results":"46","hashOfConfig":"25"},{"size":2600,"mtime":1612715851497,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"14cp8v4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"50"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"50"},"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\index.tsx",[],["116","117"],"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\App.tsx",[],"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\helpers\\environment.js",[],["118","119"],"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\Navigation.tsx",["120","121"],"import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Grid, Button, Typography } from '@material-ui/core';\r\n\r\ntype NavigationProps = {\r\n\r\n}\r\ntype NavigationState = {\r\n  logout: boolean; \r\n}\r\n\r\nclass Navigation extends React.Component <NavigationProps, NavigationState> {\r\n  \r\n  constructor(props: NavigationProps) {\r\n    super(props);\r\n    this.state = {\r\n      logout: false,\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.clear()\r\n    console.log('user logged out')\r\n    this.setState(previousState => {\r\n      return {\r\n        logout: !previousState.logout\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Grid container justify=\"center\" spacing={6}>\r\n        <Grid container item md={4} justify=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h2\">Restaurant Reviews Demo </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item md={8} alignItems=\"center\" direction=\"row\" justify=\"center\" spacing={4}>\r\n          <Grid item >\r\n            <Link to={'/'}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Home\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item >\r\n            <Link to={'/signup'}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Sign Up\r\n          </Button>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item >\r\n            <Link to={'/signin'}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Sign In\r\n            </Button>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item >\r\n            <Link to={'/signin'} onClick={() => {this.handleLogout()}}>\r\n              <Button variant=\"contained\" color=\"secondary\" disableElevation>\r\n                Log Out\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        {this.state.logout === false ? (\r\n              <Redirect to=\"/\" />\r\n          )\r\n            :\r\n              <Redirect to=\"/signin\" />\r\n        }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\Parent.tsx",["122"],"import React, { Component } from 'react';\r\nimport UserSignUp from '../user/UserSignUp';\r\nimport UserSignIn from '../user/UserSignIn';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport NewHome from './NewHome';\r\nimport Navigation from './Navigation';\r\n\r\nclass Parent extends React.Component {\r\n\r\n  //on click function to render the body / visit component / route to update the state?\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BrowserRouter>\r\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3}         >\r\n            <Grid container item spacing={3}>\r\n              <Navigation />\r\n            </Grid>\r\n            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={NewHome} />\r\n                <Route exact path=\"/signup\" component={UserSignUp} />\r\n                <Route exact path=\"/signin\" component={UserSignIn} />\r\n              </Switch>\r\n            </Grid>\r\n          </Grid>\r\n        </BrowserRouter>\r\n      </Container >\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Parent;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\layout\\NewHome.tsx",["123"],"import React, { Component } from 'react';\r\nimport AdministratorPanel from '../admin-only/AdministratorPanel';\r\nimport CustomersNew from '../customer-view/CustomersNew';\r\n\r\ntype HomeProps = {\r\n\r\n}\r\n\r\ntype HomeState = {\r\n  login: boolean,\r\n  admin: boolean,\r\n  token: any,\r\n}\r\n\r\nclass NewHome extends React.Component <HomeProps, HomeState> {\r\n\r\n  constructor(props: HomeProps) {\r\n    super(props)\r\n    this.state = {\r\n      login: false,\r\n      admin: false,\r\n      token: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tokenFinder(); //get the token & find out if a user is an admin\r\n  }\r\n\r\n  tokenFinder() {\r\n    const token = JSON.parse(localStorage.getItem('token')!);\r\n\r\n    // if(!token)\r\n\r\n    if (token && token.login && token.admin === true) {\r\n      this.setState({\r\n        login: true,\r\n        admin: true,\r\n        token: JSON.parse(localStorage.getItem('token')!).token,\r\n      });\r\n    } else if (token && token.login === true) {\r\n      this.setState({\r\n        login: true,\r\n        token: JSON.parse(localStorage.getItem('token')!).token,\r\n      });\r\n    } else {\r\n      this.setState({ login: false, admin: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.admin === true ? (\r\n          /* <AdminPanel login={this.state.login} token={this.state.token} /> */\r\n          <AdministratorPanel login={this.state.login} token={this.state.token} />\r\n        ) : (\r\n            /* <Customers login={this.state.login} token={this.state.token} /> */\r\n\r\n            <CustomersNew \r\n            login={this.state.login} token={this.state.token}\r\n            />\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewHome;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\AdministratorPanel.tsx",["124"],"import React, { Component } from 'react';\r\nimport API_URL from '../../helpers/environment';\r\nimport { Typography, } from '@material-ui/core'\r\nimport RestaurantDisplay from './RestaurantDisplay';\r\nimport CreateNewRestaurant from './CreateNewRestaurant';\r\nimport CustomerBiography from '../customer-view/CustomerBiography';\r\n\r\ntype AdminProps = {\r\n  login: boolean,\r\n  token: string\r\n}\r\n\r\ntype AdminState = {\r\n  data: object,\r\n\r\n}\r\n\r\nclass AdministratorPanel extends React.Component <AdminProps, AdminState> {\r\n  constructor(props: AdminProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.tokenFinder(); //get the token & find out if a user is an admin\r\n    // this.getUserRestaurants();\r\n    // console.log('fetch started');\r\n    fetch(`${API_URL}/restaurant/user`, {\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        Authorization: this.props.token,\r\n      }),\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((restaurantdata) => {\r\n        // console.log(restaurantdata);\r\n        this.setState({ data: restaurantdata });\r\n      })\r\n      .catch((error) => {\r\n        console.log('error--->', error);\r\n      });\r\n    console.log('fetch finished!');\r\n  }\r\n\r\n  deleteRestaurant = (id: any) => {\r\n    // e.preventDefault();\r\n    console.log('works', id);\r\n    try {\r\n      fetch(`${API_URL}/restaurant/${id}`, {\r\n        method: 'DELETE',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          Authorization: this.props.token,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: 10 }} >\r\n        <Typography>Restaurant Administration Panel </Typography>\r\n        <CreateNewRestaurant \r\n        login={this.props.login} token={this.props.token}\r\n        />\r\n        <br />\r\n        <Typography>Your Restaurants</Typography>\r\n\r\n        <RestaurantDisplay\r\n          login={this.props.login}\r\n          token={this.props.token}\r\n          data={this.state.data}\r\n          deleteRestaurant={this.deleteRestaurant}\r\n        />\r\n        <CustomerBiography \r\n          login={this.props.login} token={this.props.token} \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdministratorPanel;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\RestaurantDisplay.tsx",["125","126"],"import React, { Component } from 'react';\r\nimport NewRestaurantCard from './NewRestaurantCard';\r\n\r\ntype RestaurantDisplayProps = {\r\n  login: boolean,\r\n  token: string,\r\n  data: any,\r\n  deleteRestaurant: any\r\n}\r\n\r\ntype RestaurantDisplayState = {\r\n  \r\n}\r\n\r\n\r\nclass RestaurantDisplay extends React.Component <RestaurantDisplayProps, RestaurantDisplayState> {\r\n\r\n  constructor(props: RestaurantDisplayProps) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.data);\r\n\r\n    return this.props.data.map((restaurant: any) => (\r\n      /* <RestaurantCard\r\n        token={this.props.token}\r\n        key={restaurant.id}\r\n        restaurant={restaurant}\r\n        login={this.props.login}\r\n        deleteRestaurant={this.props.deleteRestaurant}\r\n      /> */\r\n\r\n      <NewRestaurantCard \r\n        token={this.props.token}\r\n        key={restaurant.id}\r\n        restaurant={restaurant}\r\n        login={this.props.login}\r\n        deleteRestaurant={this.props.deleteRestaurant}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default RestaurantDisplay;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\NewRestaurantCard.tsx",["127","128","129","130","131"],"import React, { Component } from 'react';\r\nimport API_URL from '../../helpers/environment';\r\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\r\nimport EditRestaurantView from './EditRestaurantView';\r\nimport CreateNewComment from '../user/CreateNewComment';\r\nimport CustomerCommentView from '../customer-view/CustomerCommentView';\r\n\r\ntype NewCardProps = {\r\n  login: boolean,\r\n  token: string,\r\n  restaurant: {\r\n    id: number, \r\n    name: string,\r\n    address: string,\r\n    phonenumber: string,\r\n    category: string\r\n  },\r\n  deleteRestaurant: any,\r\n}\r\n\r\ntype NewCardState = {\r\n  isOpen: boolean,\r\n  comment: any,\r\n}\r\n\r\nclass NewRestaurantCard extends React.Component <NewCardProps, NewCardState> {\r\n  constructor(props:NewCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false, \r\n      comment: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.tokenFinder(); //get the token & find out if a user is an admin\r\n    // this.getUserRestaurants();\r\n    // console.log('fetch started');\r\n    fetch(\r\n      `${API_URL}/comment/restaurant/${this.props.restaurant.id}`,\r\n      {\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          Authorization: this.props.token,\r\n        }),\r\n        method: 'GET',\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((comment) => {\r\n        // console.log(restaurantdata);\r\n        this.setState({ comment: comment.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log('error--->', error);\r\n      });\r\n    console.log('fetch finished!');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState((prevState) => ({\r\n      isOpen: !prevState.isOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // console.log('card', this.props.restaurant);\r\n\r\n    const { name, address, phonenumber, category } = this.props.restaurant;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"restaurantcard\" style={{ marginBottom: 10 }} >\r\n          <Typography className=\"restaurantname\">Name: {name}</Typography>\r\n          <Typography className=\"`restaurantaddress`\">Address: {address}</Typography>\r\n          <Typography className=\"restaurantphone\">Phone Number: {phonenumber}</Typography>\r\n          <Typography className=\"restaurantcat\">Category: {category}</Typography>\r\n        </div>\r\n\r\n        <div style={{ marginBottom: 10 }} >\r\n          {/* <EditRestaurant\r\n            restaurant={this.props.restaurant}\r\n            token={this.props.token}\r\n            deleteRestaurant={this.props.deleteRestaurant}\r\n          /> */}\r\n          <EditRestaurantView\r\n          restaurant={this.props.restaurant}\r\n          token={this.props.token}\r\n          deleteRestaurant={this.props.deleteRestaurant}\r\n          />\r\n\r\n          \r\n        </div>\r\n\r\n        <div className=\"restaurantcomments\" style={{ marginBottom: 10 }} >\r\n          {this.state.comment.length === 0 ? (\r\n            <div>\r\n              <Typography>No users have commented on this restaurant.</Typography>\r\n            </div>\r\n          ) : (\r\n              <CustomerCommentView \r\n              token={this.props.token}\r\n              comment={this.state.comment}\r\n              />\r\n              /* <CustomerComments\r\n                token={this.props.token}\r\n                comment={this.state.comment}\r\n              /> */\r\n            )}\r\n\r\n          {this.props.login === true ? (\r\n            <div style={{ marginBottom: 10 }} >\r\n              {/* <CreateComment\r\n                token={this.props.token}\r\n                restaurant={this.props.restaurant}\r\n              /> */}\r\n              <CreateNewComment \r\n                token={this.props.token}\r\n                restaurant={this.props.restaurant}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRestaurantCard;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\EditRestaurantView.tsx",["132","133","134"],"import React, { Component } from 'react';\r\nimport API_URL from '../../helpers/environment';\r\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\r\n\r\ntype EditResProps = {\r\n  restaurant: {\r\n    id: number,\r\n    name: string,\r\n    phonenumber: string,\r\n    address: string,\r\n    category: string,\r\n  },\r\n  token: string,\r\n  deleteRestaurant: any,\r\n}\r\n\r\ntype EditResState = {\r\n  name: string,\r\n  address: string,\r\n  phonenumber: string,\r\n  category: string\r\n}\r\n\r\nclass EditRestaurantView extends React.Component <EditResProps, EditResState> {\r\n\r\n  constructor(props: EditResProps) {\r\n    super(props);\r\n      this.state = {\r\n        name: '',\r\n        address: '',\r\n        phonenumber: '',\r\n        category: ''\r\n      }\r\n  }\r\n\r\n  setName = (e: any) => {\r\n    this.setState({name: e.target.value})\r\n  }\r\n\r\n  setAddress = (e: any) => {\r\n    this.setState({address: e.target.value})\r\n  }\r\n  \r\n  setPhonenumber = (e: any) => {\r\n    this.setState({phonenumber: e.target.value})\r\n  }\r\n  setCategory = (e: any) => {\r\n    this.setState({category: e.target.value})\r\n  }\r\n\r\n  editRestaurant = (e: any) => {\r\n    e.preventDefault();\r\n    // console.log('works');\r\n\r\n    const input = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      phonenumber: this.state.phonenumber,\r\n      category: this.state.category,\r\n    };\r\n\r\n    try {\r\n      // const input = this.state;\r\n      fetch(`${API_URL}/restaurant/${this.props.restaurant.id}`, {\r\n        method: 'PUT',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          Authorization: this.props.token,\r\n        }),\r\n        body: JSON.stringify(input),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //make page refresh\r\n          console.log(data);\r\n        });\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const { id, name, address, phonenumber, category } = this.props.restaurant;\r\n\r\n    return (\r\n      <div>\r\n        <Typography>Edit this restaurant</Typography>\r\n        <form onSubmit={this.editRestaurant}>\r\n          <TextField\r\n            placeholder={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            required\r\n            onChange={this.setName.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder={address}\r\n            type=\"text\"\r\n            name=\"address\"\r\n            required\r\n            onChange={this.setAddress.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder={phonenumber}\r\n            type=\"text\"\r\n            name=\"phonenumber\"\r\n            onChange={this.setPhonenumber.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder={category}\r\n            type=\"text\"\r\n            name=\"category\"\r\n            required\r\n            onChange={this.setCategory.bind(this)}\r\n          />\r\n          <Button type=\"submit\">Edit Restaurant </Button>\r\n        </form>\r\n        <Button onClick={this.props.deleteRestaurant.bind(this, id)}>\r\n          Delete Restaurant\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditRestaurantView;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\admin-only\\CreateNewRestaurant.tsx",["135","136","137"],"import React, { Component } from 'react';\r\nimport API_URL from '../../helpers/environment';\r\nimport { Typography, Button, TextField, Card, CardContent } from '@material-ui/core'\r\n\r\ntype NewResProps = {\r\n  login: boolean,\r\n  token: string,\r\n\r\n}\r\n//these are types for the state variable\r\n\r\ntype NewResState = {\r\n  createdPlace: boolean,\r\n  name: string,\r\n  address: string,\r\n  phonenumber: string,\r\n  category: string,\r\n}\r\n\r\nclass CreateNewRestaurant extends React.Component <NewResProps, NewResState> {\r\n  constructor(props: NewResProps) {\r\n    super(props);\r\n    this.state = {\r\n      createdPlace: false,\r\n      name: '',\r\n      address: '',\r\n      phonenumber: '',\r\n      category: '',\r\n    }\r\n  }\r\n\r\n\r\n  setName = (e: any) => {\r\n    this.setState({name: e.target.value})\r\n  }\r\n\r\n  setAddress = (e: any) => {\r\n    this.setState({address: e.target.value})\r\n  }\r\n  \r\n  setPhonenumber = (e: any) => {\r\n    this.setState({phonenumber: e.target.value})\r\n  }\r\n  setCategory = (e: any) => {\r\n    this.setState({category: e.target.value})\r\n  }\r\n\r\n  createRestaurant = (e: any) => {\r\n    e.preventDefault();\r\n    console.log('works');\r\n\r\n    const input = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      phonenumber: this.state.phonenumber,\r\n      category: this.state.category,\r\n    };\r\n\r\n    console.log('test input -->', input);\r\n\r\n    try {\r\n      // const input = this.state;\r\n      fetch(`${API_URL}/restaurant/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': this.props.token,\r\n        },\r\n        body: JSON.stringify(input),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({ createdPlace: true });\r\n          console.log(data);\r\n        });\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: 10 }} >\r\n        <Typography>Create Restaurant </Typography>\r\n        <form onSubmit={this.createRestaurant}>\r\n          <TextField\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.setName.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder=\"Address\"\r\n            type=\"text\"\r\n            name=\"address\"\r\n            onChange={this.setAddress.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder=\"phone number\"\r\n            type=\"tel\"\r\n            name=\"phonenumber\"\r\n            onChange={this.setPhonenumber.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder=\"category\"\r\n            type=\"text\"\r\n            name=\"category\"\r\n            onChange={this.setCategory.bind(this)}\r\n          />\r\n          <Button type=\"submit\">Add Restaurant</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewRestaurant;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\CreateNewComment.tsx",["138"],"import React, { Component } from 'react';\r\nimport { Button, TextField, Typography } from '@material-ui/core'\r\nimport API_URL from '../../helpers/environment';\r\n\r\ntype NewCommentProps = {\r\n  token: string,\r\n  restaurant: any\r\n}\r\n\r\ntype NewCommentState = {\r\n  title: string,\r\n  body: string,\r\n  commentmade: boolean\r\n}\r\n\r\n\r\nclass CreateNewComment extends React.Component <NewCommentProps, NewCommentState> {\r\n  constructor(props: NewCommentProps) {\r\n    super(props);\r\n    this.state = {\r\n      commentmade: false,\r\n      title: '',\r\n      body: '',\r\n    }\r\n  }\r\n\r\n  setTitle = (e: any) => {\r\n    this.setState({title: e.target.value})\r\n  }\r\n\r\n  setBody = (e: any) => {\r\n    this.setState({body: e.target.value})\r\n  } \r\n\r\n\r\n  createComment = (e: any) => {\r\n    e.preventDefault();\r\n    console.log('works');\r\n\r\n    const input = {\r\n      title: this.state.title,\r\n      body: this.state.body,\r\n      restaurantid: this.props.restaurant.id,\r\n    };\r\n\r\n    console.log('test input -->', input);\r\n\r\n    try {\r\n      // const input = this.state;\r\n      fetch(`${API_URL}/comment/`, {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          Authorization: this.props.token,\r\n        }),\r\n        body: JSON.stringify(input),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((comment) => {\r\n          console.log('comment---> ', comment);\r\n          this.setState({ commentmade: true });\r\n        });\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography>Leave a comment</Typography>\r\n        {\r\n          this.state.commentmade === false\r\n            ? <form onSubmit={this.createComment}>\r\n              <TextField\r\n                id=\"outlined-basic\" label=\"Title of Comment\" variant=\"outlined\"\r\n                placeholder=\"Comment Title\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                required\r\n                onChange={this.setTitle.bind(this)}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\" label=\"Comment Details\" variant=\"outlined\"\r\n                placeholder=\"Comment Details\"\r\n                type=\"text\"\r\n                name=\"body\"\r\n                required\r\n                onChange={this.setBody.bind(this)}\r\n              />\r\n              <Button type=\"submit\"> Submit </Button>\r\n            </form>\r\n            :\r\n            <Typography>\r\n              Comment was made.\r\n            </Typography>\r\n        }\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewComment;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerCommentView.tsx",["139"],"import React, { Component } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\ntype CommentProps = {\r\n  token: string,\r\n  comment: any,\r\n}\r\ntype CommentState = {\r\n  test: string\r\n}\r\n\r\nclass CustomerCommentView extends React.Component <CommentProps , CommentState> {\r\n  constructor(props: CommentProps) {\r\n    super(props);\r\n    this.state = {\r\n      test: '',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.comment.map((comment: any) => (\r\n      <Grid key={comment.id} className=\"single-comment\" style={{ marginBottom: 10 }} >\r\n        <Typography variant=\"subtitle2\" > {comment.title}</Typography>\r\n        <Typography variant=\"caption\" gutterBottom>{comment.body}</Typography>\r\n      </Grid>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default CustomerCommentView;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBiography.tsx",["140"],"import React, { Component } from 'react';\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport API_URL from '../../helpers/environment';\r\nimport CustomerBioPanelNew from './CustomerBioPanelNew';\r\n\r\ntype BioProps = {\r\n  token: string,\r\n  login: boolean\r\n}\r\n\r\ntype BioState = {\r\n  comment: any,\r\n  deleteme: boolean,\r\n  deletedcomment: boolean\r\n}\r\n\r\nclass CustomerBiography extends React.Component <BioProps , BioState> {\r\n  constructor(props: BioProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: [],\r\n      deleteme: false,\r\n      deletedcomment: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${API_URL}/comment/user`, {\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        Authorization: this.props.token,\r\n      }),\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((usercomment) => {\r\n        console.log(usercomment);\r\n        this.setState({ comment: usercomment.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log('error--->', error);\r\n      });\r\n    console.log('res fetch finished!');\r\n  }\r\n\r\n  deleteComment = (id: number) => {\r\n    // e.preventDefault();\r\n    console.log('works', id);\r\n    if (this.state.deleteme === false) {\r\n      this.setState({ deleteme: true })\r\n      console.log('prep to delete')\r\n    } else {\r\n      try {\r\n        fetch(`${API_URL}/comment/restaurant/${id}`, {\r\n          method: 'DELETE',\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            Authorization: this.props.token,\r\n          }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            this.setState({ deletedcomment: true });\r\n          });\r\n      } catch (error) {\r\n        console.log('error', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid alignItems=\"center\" spacing={3}>\r\n        <Typography variant=\"h4\" align=\"center\">My comments</Typography>\r\n\r\n        {/* <CustomerBioPanel\r\n          comment={this.state.comment}\r\n          deleteComment={this.deleteComment}\r\n          token={this.props.token}\r\n        /> */}\r\n\r\n        <CustomerBioPanelNew \r\n          comment={this.state.comment}\r\n          deleteComment={this.deleteComment}\r\n          token={this.props.token}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerBiography;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomersNew.tsx",["141"],"import React, { Component } from 'react';\r\nimport { Typography, Grid, } from '@material-ui/core'\r\nimport API_URL from '../../helpers/environment';\r\nimport CustomerBiography from './CustomerBiography';\r\nimport CustomerRestaurantsNew from './CustomerRestaurantsNew';\r\n\r\ntype CNProps = {\r\n  token: string,\r\n  login: boolean\r\n}\r\n\r\ntype CNState = {\r\n  data: any,\r\n  mounted: boolean,\r\n}\r\n\r\nclass CustomersNew extends  React.Component <CNProps, CNState> {\r\n  constructor(props: CNProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      mounted: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(`${API_URL}/restaurant`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: this.props.token,\r\n      },\r\n      method: 'GET',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((restaurantdata) => {\r\n        // console.log(restaurantdata);\r\n        if (this.state.mounted) {\r\n          this.setState({ data: restaurantdata.data });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('error--->', error);\r\n      });\r\n    console.log('res fetch finished!');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({mounted: false})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container justify=\"center\" spacing={5} >\r\n\r\n        {this.props.login === true\r\n          ?\r\n\r\n          (\r\n            <Grid container justify=\"center\" spacing={5}>\r\n              <Grid item>\r\n                {/* <CustomerBio token={this.props.token} login={this.props.login} /> */}\r\n                <CustomerBiography token={this.props.token} login={this.props.login}  />\r\n              </Grid>\r\n              <Grid item>\r\n              <CustomerRestaurantsNew\r\n                  data={this.state.data}\r\n                  token={this.props.token}\r\n                  login={this.props.login}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )\r\n          :\r\n          (\r\n            <Grid container direction=\"column\" alignItems=\"center\" spacing={5} style={{ margin: 20 }}>\r\n              <Grid item>\r\n                <Typography variant=\"h6\">Sign In or Sign Up to create, edit or delete comments!</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <CustomerRestaurants\r\n                  data={this.state.data}\r\n                  token={this.props.token}\r\n                  login={this.props.login}\r\n                /> */}\r\n\r\n                <CustomerRestaurantsNew\r\n                  data={this.state.data}\r\n                  token={this.props.token}\r\n                  login={this.props.login}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )\r\n        }\r\n\r\n        {/* <CustomerRestaurants\r\n          data={this.state.data}\r\n          token={this.props.token}\r\n          login={this.props.login}\r\n        /> */}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomersNew;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerRestaurantsNew.tsx",["142","143","144"],"import React, { Component } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CustomerCardNew from './CustomerCardNew';\r\n\r\ntype CRNProps = {\r\n  data:any,\r\n  token: string,\r\n  login: boolean\r\n}\r\n\r\ntype CRNState = {\r\n\r\n}\r\n\r\nclass CustomerRestaurantsNew extends React.Component <CRNProps, CRNState> {\r\n  constructor(props:CRNProps) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    // console.log('customers only', this.props.data);\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n      // alignItems=\"flex-end\"\r\n      >\r\n\r\n        <Typography variant=\"h4\" align=\"center\">Some fine restaurants</Typography>\r\n\r\n        {\r\n          this.props.data.map((restaurant: any) => (\r\n            // <CustomerCard\r\n            //   key={restaurant.id}\r\n            //   restaurant={restaurant}\r\n            //   token={this.props.token}\r\n            //   login={this.props.login}\r\n            // />\r\n\r\n            <CustomerCardNew \r\n            key={restaurant.id}\r\n            restaurant={restaurant}\r\n            token={this.props.token}\r\n            login={this.props.login} \r\n            />\r\n          ))\r\n        }\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomerRestaurantsNew;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerCardNew.tsx",["145","146"],"import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport API_URL from '../../helpers/environment';\r\nimport CustomerCommentView from './CustomerCommentView';\r\nimport CreateNewComment from '../user/CreateNewComment';\r\n\r\ntype CCNProps = {\r\n  restaurant: any,\r\n  token: string,\r\n  login: boolean\r\n}\r\n\r\ntype CCNState = {\r\n  comment: any,\r\n}\r\n\r\nclass CustomerCardNew extends React.Component <CCNProps, CCNState> {\r\n  constructor(props: CCNProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${API_URL}/comment/restaurant/${this.props.restaurant.id}`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: this.props.token,\r\n        },\r\n        method: 'GET',\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((comment) => {\r\n        // console.log(restaurantdata);\r\n        this.setState({ comment: comment.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log('error--->', error);\r\n      });\r\n    // console.log('comment fetch finished!');\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { id, name, address, phonenumber, category } = this.props.restaurant;\r\n    // const classes = makeStyles();\r\n\r\n    return (\r\n      <Grid item>\r\n\r\n        <Card>\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography gutterBottom className=\"restaurantname\">{name}</Typography>\r\n                <Typography gutterBottom className=\"restaurantaddress\">{address}</Typography>\r\n                <Typography className=\"restaurantphone\">{phonenumber}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography className=\"restaurantcategory\">{category}</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <div className=\"restaurantcomments\">\r\n\r\n                  {this.state.comment.length > 1 ? (\r\n                    <div>\r\n                      <Typography>No users have commented on this restaurant. </Typography>\r\n                    </div>\r\n                  ) : (\r\n                      <div>\r\n                        <Typography variant=\"h6\" gutterBottom>Customer Comments</Typography>\r\n                        {/* <CustomerComments\r\n                          token={this.props.token}\r\n                          comment={this.state.comment}\r\n                        /> */}\r\n                        <CustomerCommentView\r\n                          token={this.props.token}\r\n                          comment={this.state.comment}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                  {this.props.login === true ? (\r\n                    // <CreateComment\r\n                    //   token={this.props.token}\r\n                    //   restaurant={this.props.restaurant}\r\n                    // />\r\n                    <CreateNewComment token={this.props.token}\r\n                    restaurant={this.props.restaurant} />\r\n                  ) : (\r\n                      <br />\r\n                    )}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerCardNew;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBioPanelNew.tsx",["147","148"],"import React, { Component } from 'react'\r\nimport CustomerBioCommentView from './CustomerBioCommentView';\r\n\r\ntype CBPNProps  = {\r\n    comment: any, \r\n    token: string, \r\n    deleteComment: Function,\r\n}\r\n\r\ntype CBPNState = {\r\n\r\n}\r\n\r\nclass CustomerBioPanelNew extends React.Component <CBPNProps, CBPNState> {\r\n\r\n    constructor(props:CBPNProps) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.comment.map((comment: any) => (\r\n                    // <CustomerBioComment\r\n                    //     key={comment.id}\r\n                    //     comment={comment}\r\n                    //     deleteComment={this.props.deleteComment}\r\n                    //     token={this.props.token}\r\n                    // />\r\n\r\n                    <CustomerBioCommentView\r\n                        key={comment.id}\r\n                        comment={comment}\r\n                        deleteComment={this.props.deleteComment}\r\n                        token={this.props.token}\r\n                    />\r\n\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomerBioPanelNew\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\CustomerBioCommentView.tsx",["149","150","151","152"],"import React, { Component } from 'react';\r\nimport { Typography, Button, Card, CardContent } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Subtitles } from '@material-ui/icons';\r\nimport EditCommentNew from './EditCommentNew';\r\n\r\ntype CBCprops = {\r\n  comment: {\r\n    title: string,\r\n    body: string,\r\n    id: number\r\n  }\r\n  token: string,\r\n  deleteComment: any\r\n}\r\n\r\ntype CBCstate = {\r\n\r\n}\r\n\r\nclass CustomerBioComment extends React.Component <CBCprops, CBCstate> {\r\n  constructor(props: CBCprops) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { title, body, id } = this.props.comment;\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle2\">{title}</Typography>\r\n          <Typography >{body}</Typography>\r\n          {/* <EditComment token={this.props.token} comment={this.props.comment} /> */}\r\n          <EditCommentNew token={this.props.token} comment={this.props.comment} />\r\n          <Button onClick={this.props.deleteComment.bind(this, id)} variant=\"contained\" color=\"secondary\">\r\n            Doubleclick to delete comment\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomerBioComment;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\customer-view\\EditCommentNew.tsx",["153"],"import React, { Component } from 'react';\r\nimport { Typography, Button, TextField } from '@material-ui/core'\r\nimport API_URL from '../../helpers/environment';\r\n\r\ntype ECNProps = {\r\n  comment: any,\r\n  token: string,\r\n}\r\n\r\ntype ECNState = {\r\n  title: string,\r\n  body: string,\r\n  commentedit: boolean,\r\n}\r\n\r\nclass EditCommentNew extends React.Component <ECNProps, ECNState> {\r\n\r\n\r\n  constructor(props: ECNProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      commentedit: false,\r\n      title: '',\r\n      body: ''\r\n    };\r\n  }\r\n\r\n\r\n  setTitle = (e: any) => {\r\n    this.setState({title: e.target.value})\r\n  }\r\n\r\n  setBody = (e: any) => {\r\n    this.setState({body: e.target.value})\r\n  }\r\n\r\n  editComment = (e: any) => {\r\n    e.preventDefault();\r\n    // console.log('works');\r\n\r\n    const input = {\r\n      title: this.state.title,\r\n      body: this.state.body,\r\n    };\r\n\r\n    // console.log(\r\n    //   'test input -->',\r\n    //   input,\r\n    //   'fetch url--->',\r\n    //   `http://localhost:2000/comment/restaurant/${this.props.comment.id}`\r\n    // );\r\n\r\n    try {\r\n      // const input = this.state;\r\n      fetch(\r\n        `${API_URL}/comment/restaurant/${this.props.comment.id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: this.props.token,\r\n          },\r\n          body: JSON.stringify(input),\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //make page refresh\r\n          console.log(data);\r\n\r\n          this.setState({ commentedit: true });\r\n        });\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 16 }}>\r\n        <Typography>Edit Comment</Typography>\r\n        {\r\n          this.state.commentedit === false\r\n            ?\r\n            <div>\r\n              <form onSubmit={this.editComment} style={{ marginBottom: 10 }}>\r\n                <TextField\r\n                  placeholder={this.props.comment.title}\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  required\r\n                  onChange={this.setTitle.bind(this)}\r\n                />\r\n\r\n                <TextField\r\n                  placeholder={this.props.comment.body}\r\n                  type=\"text\"\r\n                  name=\"body\"\r\n                  fullWidth\r\n                  required\r\n                  onChange={this.setBody.bind(this)}\r\n                />\r\n                <Button type=\"submit\"> Submit</Button>\r\n              </form>\r\n            </div>\r\n            :\r\n            <div>\r\n              <Typography>Comment was updated.</Typography>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCommentNew;\r\n",["154","155"],"C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\UserSignUp.tsx",["156","157","158","159","160","161","162"],"import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { Typography, TextField, Button } from '@material-ui/core'\r\nimport API_URL from '../../helpers/environment';\r\n\r\ntype SUNProps = {\r\n\r\n}\r\n\r\ntype SUNState = {\r\n  email: string,\r\n  password: string,\r\n  username: string, \r\n  phonenumber: string,\r\n  restaurantowner: boolean,\r\n  login: boolean,\r\n}\r\n\r\nclass SignUpNew extends React.Component <SUNProps, SUNState> {\r\n\r\n  constructor(props: SUNProps) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantowner: false,\r\n      login: false,\r\n      email: '',\r\n      username: '',\r\n      password: '',\r\n      phonenumber: '',\r\n      \r\n    }\r\n  }\r\n\r\n  handleEmail = (e: any) => {\r\n    this.setState({email: e.target.value\r\n    })\r\n  }\r\n\r\n  handleUsername = (e: any) => {\r\n    this.setState({username: e.target.value\r\n    })\r\n  }\r\n\r\n  handlePassword = (e: any) => {\r\n    this.setState({password: e.target.value\r\n    })\r\n  }\r\n  \r\n  handlePhoneNumber = (e: any) => {\r\n    this.setState({phonenumber: e.target.value\r\n    })\r\n  }\r\n\r\n  register = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    const input = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      username: this.state.username,\r\n      phonenumber: this.state.phonenumber,\r\n      restaurantowner: this.state.restaurantowner,\r\n    };\r\n\r\n    fetch(`${API_URL}/user/signup`, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(input),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.login === true) {\r\n\r\n          localStorage.setItem(\r\n            'token',\r\n            JSON.stringify({\r\n              login: true,\r\n              token: data.sessionToken,\r\n              admin: data.user.restaurantowner,\r\n            })\r\n          );\r\n          this.setState({ login: true })\r\n\r\n          console.log('done');\r\n        } else {\r\n          throw Error(data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Something went wrong, please try again!');\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n        <Typography>Create Your Account:</Typography>\r\n        <form onSubmit={this.register}>\r\n          <TextField\r\n            placeholder=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            onChange={this.handleEmail.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            // minLength=\"4\"\r\n            required\r\n            onChange={this.handleUsername.bind(this)}\r\n          />\r\n          <TextField\r\n            // pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            // minlength=\"8\"\r\n            required\r\n            onChange={this.handlePassword.bind(this)}\r\n          />\r\n          <TextField\r\n            placeholder=\"Phone Number\"\r\n            type=\"text\"\r\n            name=\"phonenumber\"\r\n            // minLength=\"7\"\r\n            // maxLength=\"16\"\r\n            onChange={this.handlePhoneNumber.bind(this)}\r\n          />\r\n          <p>Please select if you would like to setup a busines page:</p>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"restaurantowner\"\r\n            onClick={(e) => (this.setState({restaurantowner: true}))}\r\n          />\r\n          <Button type=\"submit\"> Sign Up </Button>\r\n        </form>\r\n\r\n        {\r\n          this.state.login === true ? (\r\n            <div>\r\n              <Redirect to=\"/\" />\r\n            </div>\r\n          )\r\n            :\r\n            ''\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpNew;\r\n","C:\\Users\\David\\Desktop\\finalProject\\client\\src\\components\\user\\UserSignIn.tsx",["163","164","165","166","167","168","169"],"import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport API_URL from '../../helpers/environment';\r\nimport { Typography, TextField, Button } from '@material-ui/core'\r\n\r\n\r\ntype USIProps = {\r\n\r\n}\r\n\r\ntype USIState = {\r\n  active: boolean,\r\n  email: string,\r\n  password: string,\r\n}\r\n\r\nclass UserSignIn extends React.Component <USIProps, USIState> {\r\n  //this will be a class component\r\n\r\n  constructor(props: USIProps) {\r\n    super(props);\r\n    this.state = {\r\n      active: false,\r\n      email: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  handleEmail = (e: any) => {\r\n    this.setState({email: e.target.value\r\n    })\r\n  }\r\n\r\n  handlePassword = (e: any) => {\r\n    this.setState({password: e.target.value\r\n    })\r\n  }\r\n\r\n  signIn = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    const input = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    fetch(`${API_URL}/user/signin`, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(input),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.login === true) {\r\n          localStorage.setItem(\r\n            'token',\r\n            JSON.stringify({\r\n              login: true,\r\n              token: data.sessionToken,\r\n              admin: data.user.restaurantowner,\r\n            })\r\n\r\n          );\r\n          this.setState({ active: true })\r\n        } else {\r\n          throw Error(data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography>Welcome back. Please sign-in: </Typography>\r\n        <form onSubmit={this.signIn}>\r\n          <TextField\r\n            placeholder=\"email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={this.handleEmail.bind(this)}\r\n                      />\r\n          <TextField\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={this.handlePassword.bind(this)}\r\n          />\r\n          <Button type=\"submit\"> Sign In </Button>\r\n        </form>\r\n        {\r\n          this.state.active === true ? (\r\n            <div>\r\n              <Redirect to=\"/\" />\r\n            </div>\r\n          )\r\n            :\r\n            ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSignIn;\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":3,"column":20,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":18,"column":3,"nodeType":"181","messageId":"182","endLine":21,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"183","line":3,"column":22,"nodeType":"176","messageId":"177","endLine":3,"endColumn":28},{"ruleId":"174","severity":1,"message":"184","line":3,"column":30,"nodeType":"176","messageId":"177","endLine":3,"endColumn":39},{"ruleId":"174","severity":1,"message":"185","line":3,"column":41,"nodeType":"176","messageId":"177","endLine":3,"endColumn":45},{"ruleId":"174","severity":1,"message":"186","line":3,"column":47,"nodeType":"176","messageId":"177","endLine":3,"endColumn":58},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"185","line":3,"column":41,"nodeType":"176","messageId":"177","endLine":3,"endColumn":45},{"ruleId":"174","severity":1,"message":"186","line":3,"column":47,"nodeType":"176","messageId":"177","endLine":3,"endColumn":58},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"185","line":3,"column":41,"nodeType":"176","messageId":"177","endLine":3,"endColumn":45},{"ruleId":"174","severity":1,"message":"186","line":3,"column":47,"nodeType":"176","messageId":"177","endLine":3,"endColumn":58},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"187","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":17,"column":3,"nodeType":"181","messageId":"182","endLine":19,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"188","line":55,"column":13,"nodeType":"176","messageId":"177","endLine":55,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":16,"column":5,"nodeType":"181","messageId":"182","endLine":18,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"189","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":20},{"ruleId":"174","severity":1,"message":"190","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":22,"column":3,"nodeType":"181","messageId":"182","endLine":25,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"170","replacedBy":"191"},{"ruleId":"172","replacedBy":"192"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":3,"column":20,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"174","severity":1,"message":"193","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":9},{"ruleId":"174","severity":1,"message":"194","line":5,"column":3,"nodeType":"176","messageId":"177","endLine":5,"endColumn":8},{"ruleId":"174","severity":1,"message":"195","line":6,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":7},{"ruleId":"174","severity":1,"message":"196","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":13},{"ruleId":"174","severity":1,"message":"197","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":3,"column":20,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"174","severity":1,"message":"193","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":9},{"ruleId":"174","severity":1,"message":"194","line":5,"column":3,"nodeType":"176","messageId":"177","endLine":5,"endColumn":8},{"ruleId":"174","severity":1,"message":"195","line":6,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":7},{"ruleId":"174","severity":1,"message":"196","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":13},{"ruleId":"174","severity":1,"message":"197","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'TextField' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'makeStyles' is defined but never used.","'id' is assigned a value but never used.","'withStyles' is defined but never used.","'Subtitles' is defined but never used.",["198"],["199"],"'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]